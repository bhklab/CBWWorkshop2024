[{"path":"https://bhklab.github.io/CBWWorkshop2024/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 CBWWorkshop2024 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module1.html","id":"instructors-names-and-contact-information","dir":"Articles","previous_headings":"Lab 1 Overview","what":"Instructor(s) name(s) and contact information","title":"Module 1: Introduction to pharmacogenomics","text":"Jermiah Joseph jermiah.joseph@uhn.ca Nikta Feizi nikta.feizi@uhn.ca Julia Nguyen julia.nguyen@uhn.ca","code":""},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module1.html","id":"learning-goals","dir":"Articles","previous_headings":"Lab 1 Overview > Lab Description","what":"Learning goals","title":"Module 1: Introduction to pharmacogenomics","text":"Understand data structure PharmacoSet Learn access features metadata PharmacoSet Learn design linear multivariate predictors Learn filter outliers missing values","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module1.html","id":"learning-objectives","dir":"Articles","previous_headings":"Lab 1 Overview > Lab Description","what":"Learning objectives","title":"Module 1: Introduction to pharmacogenomics","text":"Describe use cases PharmacoGx Pharmacogenomics Understand structure CoreSet PharmacoSet classes facilitate use subsequent analyses Download/load PharmacoSet using PharmacoGx orcestra.ca Subset filter PharmacoSet samples /treatments Access molecular features, dose-response, metadata contained within PharmacoSet","code":""},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module1.html","id":"exploring-preclinical-datasets-for-pharmacogenomic-analysis","dir":"Articles","previous_headings":"Getting Started","what":"Exploring preclinical datasets for pharmacogenomic analysis","title":"Module 1: Introduction to pharmacogenomics","text":"*See list available subsetted datasets Reference","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module1.html","id":"molecular-profiles","dir":"Articles","previous_headings":"Getting Started > Exploring preclinical datasets for pharmacogenomic analysis","what":"Molecular profiles","title":"Module 1: Introduction to pharmacogenomics","text":"start RNA-Seq data simple example. key things notice : identifiers sample (model_id, model_name), identifiers gene (gene_id, gene_symbol), well two expression values (read_count, fpkm). create expression matrices, select one sample identifier, one feature (gene) identifier, one expression value.","code":"data(GDSC_rnaseq) GDSC_rnaseq |> head() #>    model_id model_name data_source   gene_id gene_symbol read_count  fpkm #> 1 SIDM00794       A388      sanger SIDG00082       ABCC6         10  0.01 #> 2 SIDM00794       A388      sanger SIDG00106       ABCF3      20264 25.95 #> 3 SIDM00794       A388      sanger SIDG00108       ABCG2       1070  1.47 #> 4 SIDM00794       A388      sanger SIDG00148        ABI3          6  0.02 #> 5 SIDM00794       A388      sanger SIDG00177      ACADSB       1410  1.50 #> 6 SIDM00794       A388      sanger SIDG00198       ACER1         12  0.06"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module1.html","id":"metadata-annotation-files","dir":"Articles","previous_headings":"Getting Started > Exploring preclinical datasets for pharmacogenomic analysis","what":"Metadata / annotation files","title":"Module 1: Introduction to pharmacogenomics","text":"preparing pharmacogenomic analysis, ideal accompanying metadata samples (cell lines) features (genes). made data available package well. ’ll start gene annotations: data provided GDSC enables mapping across various gene annotations. important identify gene annotation maps RNA-Seq data check completeness. can see gene_id maps completely genes RNA-seq data, whereas hgnc_symbol cosmic_gene_symbol missing gene symbols (see numbers FALSE). pretty obvious indicator move forward gene_id downstream analysis. Now move cell line annotations. attributes made available, first look confirm mapping id RNA-Seq data. examples available variables may interest downstream analysis.","code":"data(GDSC_gene_identifiers) GDSC_gene_identifiers |> head() #>     gene_id cosmic_gene_symbol ensembl_gene_id entrez_id    hgnc_id hgnc_symbol #> 1 SIDG00001               A1BG ENSG00000121410         1     HGNC:5        A1BG #> 2 SIDG00002                    ENSG00000268895    503538 HGNC:37133    A1BG-AS1 #> 3 SIDG00003               A1CF ENSG00000148584     29974 HGNC:24086        A1CF #> 4 SIDG00004                A2M ENSG00000175899         2     HGNC:7         A2M #> 5 SIDG00005                    ENSG00000245105    144571 HGNC:27057     A2M-AS1 #> 6 SIDG00006              A2ML1 ENSG00000166535    144568 HGNC:23336       A2ML1 #>   refseq_id uniprot_id #> 1 NM_130786     P04217 #> 2 NR_015380            #> 3 NM_014576     Q9NQ94 #> 4 NM_000014     P01023 #> 5 NR_026971            #> 6 NM_144670     A8K2U0 GDSC_rnaseq$gene_id %in% GDSC_gene_identifiers$gene_id |> table() #>  #>   TRUE  #> 135000  GDSC_rnaseq$gene_symbol %in% GDSC_gene_identifiers$hgnc_symbol |> table() #>  #>  FALSE   TRUE  #>   2100 132900  GDSC_rnaseq$gene_symbol %in% GDSC_gene_identifiers$cosmic_gene_symbol |> table() #>  #> FALSE  TRUE  #> 69600 65400 data(GDSC_model_list) print(colnames(GDSC_model_list)[1:39]) #>  [1] \"model_id\"                \"sample_id\"               #>  [3] \"patient_id\"              \"parent_id\"               #>  [5] \"model_name\"              \"synonyms\"                #>  [7] \"tissue\"                  \"cancer_type\"             #>  [9] \"cancer_type_ncit_id\"     \"tissue_status\"           #> [11] \"sample_site\"             \"cancer_type_detail\"      #> [13] \"model_type\"              \"growth_properties\"       #> [15] \"model_treatment\"         \"sampling_day\"            #> [17] \"sampling_month\"          \"sampling_year\"           #> [19] \"doi\"                     \"pmed\"                    #> [21] \"msi_status\"              \"ploidy_snp6\"             #> [23] \"ploidy_wes\"              \"ploidy_wgs\"              #> [25] \"mutational_burden\"       \"model_comments\"          #> [27] \"model_relations_comment\" \"COSMIC_ID\"               #> [29] \"BROAD_ID\"                \"CCLE_ID\"                 #> [31] \"RRID\"                    \"HCMI\"                    #> [33] \"suppliers\"               \"supplier\"                #> [35] \"cat_number\"              \"species\"                 #> [37] \"gender\"                  \"ethnicity\"               #> [39] \"age_at_sampling\"  GDSC_rnaseq$model_id %in% GDSC_model_list$model_id |> table() #>  #>   TRUE  #> 135000 GDSC_model_list[, c(\"model_id\", \"model_name\", \"tissue\", \"ploidy_wes\", \"mutational_burden\", \"gender\", \"ethnicity\")] |> head() #>    model_id model_name                      tissue ploidy_wes mutational_burden #> 1 SIDM01774      PK-59                    Pancreas   3.510751             24.79 #> 2 SIDM00192   SNU-1033             Large Intestine   2.780367             23.29 #> 3 SIDM01447    SNU-466      Central Nervous System   2.054101             20.58 #> 4 SIDM01554  IST-MES-2                        Lung   1.851007             22.92 #> 5 SIDM01689     MUTZ-5 Haematopoietic and Lymphoid   1.941110             28.76 #> 6 SIDM01460      TM-31      Central Nervous System   2.885529             25.89 #>    gender  ethnicity #> 1 Unknown    Unknown #> 2  Female East Asian #> 3    Male    Unknown #> 4    Male      White #> 5    Male    Unknown #> 6  Female East Asian"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module1.html","id":"drug-response-data","dir":"Articles","previous_headings":"Getting Started > Exploring preclinical datasets for pharmacogenomic analysis","what":"Drug response data","title":"Module 1: Introduction to pharmacogenomics","text":"Finally, ’ll load corresponding drug response data cell lines. can use SANGER_MODEL_ID map back RNA-Seq data. DRUG_NAME used identifier treatment. also IC50 (LN_IC50) AUC (AUC) values cell-drug pair. Notice cell lines drug response data. need filtered downstream analysis.","code":"data(GDSC_drug_response) GDSC_drug_response |> head() #>   DATASET NLME_RESULT_ID NLME_CURVE_ID COSMIC_ID CELL_LINE_NAME SANGER_MODEL_ID #> 1   GDSC2            343      15946320    683667         PFSK-1       SIDM01132 #> 2   GDSC2            343      15946560    684052           A673       SIDM00848 #> 3   GDSC2            343      15946840    684057            ES5       SIDM00263 #> 4   GDSC2            343      15947099    684059            ES7       SIDM00269 #> 5   GDSC2            343      15947381    684062          EW-11       SIDM00203 #> 6   GDSC2            343      15947663    684072        SK-ES-1       SIDM01111 #>      TCGA_DESC DRUG_ID DRUG_NAME PUTATIVE_TARGET     PATHWAY_NAME COMPANY_ID #> 1           MB    1017  Olaparib    PARP1, PARP2 Genome integrity       1046 #> 2 UNCLASSIFIED    1017  Olaparib    PARP1, PARP2 Genome integrity       1046 #> 3 UNCLASSIFIED    1017  Olaparib    PARP1, PARP2 Genome integrity       1046 #> 4 UNCLASSIFIED    1017  Olaparib    PARP1, PARP2 Genome integrity       1046 #> 5 UNCLASSIFIED    1017  Olaparib    PARP1, PARP2 Genome integrity       1046 #> 6 UNCLASSIFIED    1017  Olaparib    PARP1, PARP2 Genome integrity       1046 #>   WEBRELEASE MIN_CONC MAX_CONC  LN_IC50      AUC     RMSE   Z_SCORE #> 1          Y 0.010005       10 4.488810 0.974081 0.072391  0.201882 #> 2          Y 0.010005       10 1.782152 0.842679 0.068257 -1.881795 #> 3          Y 0.010005       10 2.116072 0.869909 0.070087 -1.624732 #> 4          Y 0.010005       10 1.685857 0.834608 0.092726 -1.955925 #> 5          Y 0.010005       10 2.078938 0.844879 0.114103 -1.653318 #> 6          Y 0.010005       10 0.592900 0.727416 0.081839 -2.797320  unique(GDSC_rnaseq$model_id) %in% GDSC_drug_response$SANGER_MODEL_ID |> table() #>  #> FALSE  TRUE  #>    10    90"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module1.html","id":"exploring-other-multi-omic-profiles","dir":"Articles","previous_headings":"Getting Started","what":"Exploring other multi-omic profiles","title":"Module 1: Introduction to pharmacogenomics","text":"prepared variety molecular profiles GDSC CCLE. look examples better understand data types.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module1.html","id":"driver-mutations","dir":"Articles","previous_headings":"Getting Started > Exploring other multi-omic profiles","what":"Driver mutations","title":"Module 1: Introduction to pharmacogenomics","text":"Load driver mutations data GDSC: Notice data continuous expression like RNA-Seq. data processed can used predict response.","code":"data(GDSC_drivers) GDSC_drivers |> head() #>     gene_id gene_symbol  model_id protein_mutation             rna_mutation #> 1 SIDG27130       RGPD3 SIDM02101       p.N241fs*6  r.809_819delAAUCUUAUGCU #> 2 SIDG08129        ESR1 SIDM02095       p.L15fs*69        r.412_416delACUGC #> 3 SIDG03559        CBLC SIDM02090      p.Q419fs*81          r.1295_1296insc #> 4 SIDG02114        BAP1 SIDM02090           p.C91Y                 r.402g>a #> 5 SIDG02114        BAP1 SIDM02090           p.N78S                 r.363a>g #> 6 SIDG36265        SPEN SIDM02089      p.R753fs*53 r.2618_2627delAGGAGGCUUU #>              cdna_mutation cancer_driver cancer_predisposition_variant #> 1  c.721_731delAATCTTATGCT          True                         False #> 2          c.42_46delACTGC          True                         False #> 3          c.1253_1254insC          True                         False #> 4                 c.272G>A          True                         False #> 5                 c.233A>G          True                         False #> 6 c.2257_2266delAGGAGGCTTT          True                         False #>       effect    vaf coding source            model_name #> 1 frameshift 0.2319   True Sanger Mesobank_CellLine-53T #> 2 frameshift 0.4259   True Sanger  Mesobank_CellLine-26 #> 3 frameshift 0.5217   True Sanger Mesobank_CellLine-50T #> 4   missense 0.5217   True Sanger Mesobank_CellLine-50T #> 5   missense 0.4595   True Sanger Mesobank_CellLine-50T #> 6 frameshift 0.6333   True Sanger  Mesobank_CellLine-45"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module1.html","id":"methylation","dir":"Articles","previous_headings":"Getting Started > Exploring other multi-omic profiles","what":"Methylation","title":"Module 1: Introduction to pharmacogenomics","text":"Load methylation matrix GDSC: data already processed matrix. Notice though sample names present, instead array ID position. can use provided annotation file map back sample names model list. provided subsetted datasets. full list available Reference. encourage independent exploration datasets.","code":"data(GDSC_methylation) GDSC_methylation[1:5, 1:5] #>                          X8359018054_R03C01 X8359018053_R04C02 #> chr1:1051178-1052445              0.3733729          0.4144962 #> chr1:109824313-109824526          0.4644322          0.5959816 #> chr1:109825710-109826207          0.1411910          0.1770613 #> chr1:110008962-110010124          0.4143231          0.5317602 #> chr1:110527248-110528026          0.3022454          0.1882153 #>                          X8221932075_R03C02 X8221924165_R04C02 #> chr1:1051178-1052445              0.2892333          0.3023764 #> chr1:109824313-109824526          0.5048080          0.4594520 #> chr1:109825710-109826207          0.1668371          0.1698714 #> chr1:110008962-110010124          0.5259936          0.4551888 #> chr1:110527248-110528026          0.2679353          0.2989812 #>                          X7970368131_R04C02 #> chr1:1051178-1052445              0.3880624 #> chr1:109824313-109824526          0.5114854 #> chr1:109825710-109826207          0.1706867 #> chr1:110008962-110010124          0.4740822 #> chr1:110527248-110528026          0.2603969 data(GDSC_methylation_model_list) GDSC_methylation_model_list |> head() #>   Sample_Name Sample_Well Sample_Plate Sample_Group Pool_ID Sentrix_ID #> 1       HL-60         A06     SMET0001           NA      NA 5684819030 #> 2      IGR-37         B06     SMET0001           NA      NA 5684819030 #> 3      WM793B         C07     SMET0001           NA      NA 5723654013 #> 4       IGR39         C08     SMET0001           NA      NA 5723654013 #> 5      SW-480         D09     SMET0001           NA      NA 5723654015 #> 6         C32         E09     SMET0001           NA      NA 5723654015 #>   Sentrix_Position   Investigator Project                             Tissue #> 1           R05C01 Catia Moutinio    <NA> HAEMATOPOIETIC AND LYMPHOID TISSUE #> 2           R06C01   Javi Carmona    <NA>                               SKIN #> 3           R03C01   Javi Carmona    <NA>                               SKIN #> 4           R05C02   Javi Carmona    <NA>                               SKIN #> 5           R02C02   Javi Carmona    <NA>                    LARGE INTESTINE #> 6           R03C02 Catia Moutinio    <NA>                               SKIN #>                     Type EBV Cell_Line Wildtype Normal     Coment  Scan_Date #> 1 ACUTE MYELOID LEUKEMIA  No       YES      Yes     No       <NA> 2011-02-12 #> 2               MELANOMA  No       YES      Yes     No Metastasis 2011-02-12 #> 3               MELANOMA  No       YES      Yes     No Metastasis 2011-02-12 #> 4               MELANOMA  No       YES      Yes     No    Primary 2011-02-12 #> 5         ADENOCARCINOMA  No       YES      Yes     No    Primary 2011-02-12 #> 6               MELANOMA  No       YES      Yes     No       <NA> 2011-02-12 #>   GDSC1                   GDSC2 cosmic_id #> 1 blood acute_myeloid_leukaemia    905938 #> 2  skin                melanoma   1240153 #> 3  skin                melanoma   1299081 #> 4  skin                melanoma   1298148 #> 5  <NA>                    <NA>        NA #> 6  skin                melanoma    906830  GDSC_methylation_model_list$sampleid <- paste0(   \"X\", GDSC_methylation_model_list$Sentrix_ID,   \"_\", GDSC_methylation_model_list$Sentrix_Position ) colnames(GDSC_methylation) %in% GDSC_methylation_model_list$sampleid |> table() #>  #> TRUE  #>  100  colnames(GDSC_methylation) <- GDSC_methylation_model_list$Sample_Name[   match(colnames(GDSC_methylation), GDSC_methylation_model_list$sampleid) ] GDSC_methylation[1:5, 1:5] #>                               A673       RT4   8-MG-BA  U-118-MG CHAGO-K-1 #> chr1:1051178-1052445     0.3733729 0.4144962 0.2892333 0.3023764 0.3880624 #> chr1:109824313-109824526 0.4644322 0.5959816 0.5048080 0.4594520 0.5114854 #> chr1:109825710-109826207 0.1411910 0.1770613 0.1668371 0.1698714 0.1706867 #> chr1:110008962-110010124 0.4143231 0.5317602 0.5259936 0.4551888 0.4740822 #> chr1:110527248-110528026 0.3022454 0.1882153 0.2679353 0.2989812 0.2603969"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module1.html","id":"creating-expression-matrices-for-pharmacogenomic-analysis","dir":"Articles","previous_headings":"Getting Started","what":"Creating expression matrices for pharmacogenomic analysis","title":"Module 1: Introduction to pharmacogenomics","text":"facilitate downstream pharmacogenomic analysis, want create expression matrix : Features rows Samples columns Feature expression individual values , show example matrix using dummy data. Let’s revisit RNA-Seq example. data currently long format (.e. one row sample-feature observation). want convert wide format row gene, column sample, values gene expression. Notice 1350 genes rows 100 cell lines columns.","code":"dummy_data <- setNames(   as.data.frame(replicate(5, rnorm(5))),   paste0(\"Sample\", 1:5) ) rownames(dummy_data) <- paste0(\"Feature\", 1:5) dummy_data #>               Sample1    Sample2    Sample3     Sample4    Sample5 #> Feature1 -1.400043517  1.1484116 -0.5536994 -1.86301149  0.4681544 #> Feature2  0.255317055 -1.8218177  0.6289820 -0.52201251  0.3629513 #> Feature3 -2.437263611 -0.2473253  2.0650249 -0.05260191 -1.3045435 #> Feature4 -0.005571287 -0.2441996 -1.6309894  0.54299634  0.7377763 #> Feature5  0.621552721 -0.2827054  0.5124269 -0.91407483  1.8885049 GDSC_rnaseq |> head() #>    model_id model_name data_source   gene_id gene_symbol read_count  fpkm #> 1 SIDM00794       A388      sanger SIDG00082       ABCC6         10  0.01 #> 2 SIDM00794       A388      sanger SIDG00106       ABCF3      20264 25.95 #> 3 SIDM00794       A388      sanger SIDG00108       ABCG2       1070  1.47 #> 4 SIDM00794       A388      sanger SIDG00148        ABI3          6  0.02 #> 5 SIDM00794       A388      sanger SIDG00177      ACADSB       1410  1.50 #> 6 SIDM00794       A388      sanger SIDG00198       ACER1         12  0.06 GDSC_rnaseq |> dim() #> [1] 135000      7  # number of cell line samples length(unique(GDSC_rnaseq$model_id)) #> [1] 100  # number of genes length(unique(GDSC_rnaseq$gene_id)) #> [1] 1350 expr <- reshape2::dcast(GDSC_rnaseq, gene_id ~ model_name, value.var = \"fpkm\") rownames(expr) <- expr$gene_id expr$gene_id <- NULL  expr[1:5, 1:10] #>            A388  A427 BB65-RCC Becker BICR78 C-33-A Ca-Ski Ca9-22 CCK-81 CHL-1 #> SIDG00082  0.01  0.29     0.04   0.15   0.03   0.01   0.01   0.01   0.94  1.23 #> SIDG00106 25.95 16.45     8.19  13.88  14.04  10.99  16.42   9.04   9.37 14.86 #> SIDG00108  1.47  0.52     0.02   0.03   1.02   0.01   0.27   0.09   0.01  0.04 #> SIDG00148  0.02  0.02     0.35   0.01   0.00   0.02   0.00   0.10   0.00  0.00 #> SIDG00177  1.50  6.18     3.07   3.40   1.97   7.21   1.01   1.83   5.56 11.63  expr |> dim() #> [1] 1350  100"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module1.html","id":"feature-extraction-techniques-to-define-biomarkers","dir":"Articles","previous_headings":"Getting Started","what":"Feature extraction techniques to define biomarkers","title":"Module 1: Introduction to pharmacogenomics","text":"using continuous expression single features convenient method quantifying biomarkers, cases techniques needed /appropriate.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module1.html","id":"binarization","dir":"Articles","previous_headings":"Getting Started > Feature extraction techniques to define biomarkers","what":"Binarization","title":"Module 1: Introduction to pharmacogenomics","text":"Recall driver mutations data presented continuous numeric values. One method prepare data binarize mutation status. Looking first row, can see mutation RGPD3 gene SIDM02101 cell line model. represent mutation events 1. code casts long data frame wide format. time specify aggregate function length(), returns number rows (mutation events) gene-cell line pair. done passing option fun.aggregate = length. one mutation event RGPD3 gene SIDM02101 cell line model, hence value combination 1. Mutation events relatively sparse, see 0 majority matrix.","code":"GDSC_drivers |> head() #>     gene_id gene_symbol  model_id protein_mutation             rna_mutation #> 1 SIDG27130       RGPD3 SIDM02101       p.N241fs*6  r.809_819delAAUCUUAUGCU #> 2 SIDG08129        ESR1 SIDM02095       p.L15fs*69        r.412_416delACUGC #> 3 SIDG03559        CBLC SIDM02090      p.Q419fs*81          r.1295_1296insc #> 4 SIDG02114        BAP1 SIDM02090           p.C91Y                 r.402g>a #> 5 SIDG02114        BAP1 SIDM02090           p.N78S                 r.363a>g #> 6 SIDG36265        SPEN SIDM02089      p.R753fs*53 r.2618_2627delAGGAGGCUUU #>              cdna_mutation cancer_driver cancer_predisposition_variant #> 1  c.721_731delAATCTTATGCT          True                         False #> 2          c.42_46delACTGC          True                         False #> 3          c.1253_1254insC          True                         False #> 4                 c.272G>A          True                         False #> 5                 c.233A>G          True                         False #> 6 c.2257_2266delAGGAGGCTTT          True                         False #>       effect    vaf coding source            model_name #> 1 frameshift 0.2319   True Sanger Mesobank_CellLine-53T #> 2 frameshift 0.4259   True Sanger  Mesobank_CellLine-26 #> 3 frameshift 0.5217   True Sanger Mesobank_CellLine-50T #> 4   missense 0.5217   True Sanger Mesobank_CellLine-50T #> 5   missense 0.4595   True Sanger Mesobank_CellLine-50T #> 6 frameshift 0.6333   True Sanger  Mesobank_CellLine-45 expr <- reshape2::dcast(   GDSC_drivers,   gene_symbol ~ model_id,   value.var = \"cdna_mutation\",   fun.aggregate = length ) rownames(expr) <- expr$gene_symbol expr$gene_symbol <- NULL  expr[\"RGPD3\", \"SIDM02101\"] #> [1] 1  expr[1:5, 1:10] #>       SIDM00001 SIDM00002 SIDM00003 SIDM00006 SIDM00007 SIDM00008 SIDM00009 #> ABCB1         0         0         0         0         0         0         0 #> ABI1          0         0         0         0         0         0         0 #> ABL1          0         0         0         0         0         0         0 #> ABL2          0         0         0         0         0         0         0 #> ACVR1         0         0         0         0         0         0         0 #>       SIDM00011 SIDM00013 SIDM00014 #> ABCB1         0         0         0 #> ABI1          0         0         0 #> ABL1          0         0         0 #> ABL2          0         1         0 #> ACVR1         0         0         0"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module1.html","id":"signature-extraction","dir":"Articles","previous_headings":"Getting Started > Feature extraction techniques to define biomarkers","what":"Signature extraction","title":"Module 1: Introduction to pharmacogenomics","text":"cases individual features low predictive power, combined become much informative drug response. Let’s revisit methylation data. Recall row CpG site. 1000 CpG sites. Signatures refer combinations features form pattern biological relevance. example, may choose define signature X represent CpG sites located promoters genes involved pathway Y. simplicity, can define arbituary signatures CpG sites. 1000 CpG sites randomly assigned one 10 signatures. Next want quantify signature cell line. , simplicity, sum beta values across CpG signature. now new expression matrix, time 10 defined signatures cell lines.","code":"GDSC_methylation[1:5, 1:5] #>                               A673       RT4   8-MG-BA  U-118-MG CHAGO-K-1 #> chr1:1051178-1052445     0.3733729 0.4144962 0.2892333 0.3023764 0.3880624 #> chr1:109824313-109824526 0.4644322 0.5959816 0.5048080 0.4594520 0.5114854 #> chr1:109825710-109826207 0.1411910 0.1770613 0.1668371 0.1698714 0.1706867 #> chr1:110008962-110010124 0.4143231 0.5317602 0.5259936 0.4551888 0.4740822 #> chr1:110527248-110528026 0.3022454 0.1882153 0.2679353 0.2989812 0.2603969  GDSC_methylation |> dim() #> [1] 1000  100 set.seed(123) signatures <- data.frame(   CpG = rownames(GDSC_methylation),   Signature = sample(gl(10, 100, length = 1000)) ) signatures |> head() #>                        CpG Signature #> 1     chr1:1051178-1052445         5 #> 2 chr1:109824313-109824526         5 #> 3 chr1:109825710-109826207         2 #> 4 chr1:110008962-110010124         6 #> 5 chr1:110527248-110528026         2 #> 6 chr1:114354373-114355300        10 sScores <- data.frame(matrix(NA, nrow = 0, ncol = 100))  for (s in c(1:10)) {   # get CpGs within each signature   cpgs <- signatures[signatures$Signature == s, ]$CpG   mSig <- GDSC_methylation[rownames(GDSC_methylation) %in% cpgs, ]    # compute sum of beta values for each cell line   sSum <- colSums(mSig)   sScores <- rbind(sScores, sSum) }  rownames(sScores) <- paste0(\"Signature\", 1:10) colnames(sScores) <- colnames(GDSC_methylation)  sScores[1:10, 1:5] #>                 A673      RT4  8-MG-BA U-118-MG CHAGO-K-1 #> Signature1  35.73567 41.50092 30.31945 35.03195  40.93194 #> Signature2  36.54479 41.78597 34.23020 37.28902  42.43054 #> Signature3  35.08198 39.01984 32.67874 35.14082  39.57340 #> Signature4  37.26978 42.31938 35.94349 38.44868  41.68582 #> Signature5  37.06404 42.90746 32.04316 37.13874  38.69905 #> Signature6  35.32663 40.04647 31.79493 34.86532  39.63569 #> Signature7  36.46212 40.74357 33.85272 36.77940  40.16127 #> Signature8  35.69553 40.46161 32.70537 36.50410  39.12737 #> Signature9  34.37157 38.31962 31.18276 34.40533  39.80003 #> Signature10 40.49063 42.52888 33.00193 39.79155  39.62519"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module1.html","id":"individual-practice","dir":"Articles","previous_headings":"Getting Started","what":"Individual practice","title":"Module 1: Introduction to pharmacogenomics","text":"remainder session, provide sample datasets practice techniques.","code":"data(CCLE_model_list)   #metadata for CCLE cell lines  data(CCLE_metabolomics) #CCLE metabolite expression levels data(CCLE_rrpa)         #CCLE RPPA protein expression levels data(CCLE_chromatin)    #CCLE histone modifications"},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"instructors-names-and-contact-information","dir":"Articles","previous_headings":"Lab 2 Overview","what":"Instructor(s) name(s) and contact information","title":"Module 2: Hands-on with pharmacogenomics data","text":"Jermiah J. Joseph jermiah.joseph@uhn.ca Almas Khan almas.khan@uhn.ca Julia Nguyen julia.nguyen@uhn.ca","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"learning-goals","dir":"Articles","previous_headings":"Lab 2 Overview","what":"Learning goals","title":"Module 2: Hands-on with pharmacogenomics data","text":"Understand data structure PharmacoSet Learn access features metadata PharmacoSet Learn plot batch effects using PCA run correction method (SVA) Learn filter outliers missing values","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"learning-objectives","dir":"Articles","previous_headings":"Lab 2 Overview","what":"Learning objectives","title":"Module 2: Hands-on with pharmacogenomics data","text":"Describe use cases PharmacoGx Pharmacogenomics Understand structure CoreSet PharmacoSet classes facilitate use subsequent analyses Download/load PharmacoSet using PharmacoGx orcestra.ca Subset filter PharmacoSet samples /treatments Access molecular features, dose-response metadata contained within PharmacoSet Perform quality control PharmacoSet identifying removing outliers missing values Perform batch correction PharmacoSet using sva package","code":""},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"use-cases-for-pharmacogx","dir":"Articles","previous_headings":"Setup","what":"Use Cases for PharmacoGx","title":"Module 2: Hands-on with pharmacogenomics data","text":"Downloading Data orcestra.ca . . . following function PharmacoGx can used download available PSets orcestra.ca. command : . . . convenience interest time, created PharmacoSet used tutorial. interacting dataset remainder tutorial.","code":"available <- PharmacoGx::availablePSets() |>   data.table::as.data.table()  print(names(available)) ## [1] \"Dataset Name\" \"Date Created\" \"PSet Name\"    \"version\"      \"type\"         ## [6] \"publication\"  \"DOI\"          \"Download\" print(available[, c(\"Dataset Name\", \"PSet Name\", \"version\")]) ##     Dataset Name         PSet Name      version ##           <char>            <char>       <char> ##  1:         GDSC GDSC_2020(v2-8.2) 2020(v2-8.2) ##  2:         FIMM         FIMM_2016         2016 ##  3:        Tavor        Tavor_2020         2020 ##  4:        NCI60        NCI60_2021         2021 ##  5:    UHNBreast    UHNBreast_2019         2019 ##  6:         GDSC GDSC_2020(v1-8.2) 2020(v1-8.2) ##  7:        PRISM        PRISM_2020         2020 ##  8:      BeatAML      BeatAML_2018         2018 ##  9:         gCSI         gCSI_2019         2019 ## 10:       CTRPv2       CTRPv2_2015         2015 ## 11:         GRAY         GRAY_2017         2017 ## 12:         CCLE         CCLE_2015         2015 ## 13:         PDTX         PDTX_2019         2019 ## 14:          GBM          GBM_scr2         2021 ## 15:          GBM          GBM_scr3         2021 ## 16:   NCISarcoma   NCISarcoma_2015         2015 PharmacoGx::downloadPSet(   name = \"CCLE_2015\",   saveDir = \"../psets\", # change this directory as you see fit   timeout = 3600,   verbose = TRUE )  # Note: this may take a while to download as the files are stored in # Zenodo and are quite large pset <- CBWWorkshop2024::dummy_pset pset ## <PharmacoSet> ## Name: dummy_pset  ## Date Created: Tue Oct 15 23:31:41 2024  ## Number of samples:  50  ## Molecular profiles: <MultiAssayExperiment>  ##    ExperimentList class object of length 2:  ##     [1] rnaseq.tpm : SummarizedExperiment with 100 rows and 50 columns  ##     [2] rnaseq.tpm.batch : SummarizedExperiment with 100 rows and 50 columns  ## Treatment response: <TreatmentResponseExperiment>  ##    dim:  4847 52  ##    assays(1): sensitivity  ##    rownames(4847): 1e-07:Ixabepilone:1 1e-06:Ixabepilone:1 ... 1000:Nelarabine:1 4000:Ifosfamide:1  ##    rowData(4): treatmentdose treatmentid tech_rep CONC1  ##    colnames(52): 786-O:1 A-498:1 A-549:1 ... UACC-257:1 UACC-62:1 UO-31:1  ##    colData(3): sampleid bio_rep PANEL  ##    metadata(0): none"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"understanding-the-pharmacoset-data-structure","dir":"Articles","previous_headings":"","what":"Understanding the PharmacoSet Data Structure","title":"Module 2: Hands-on with pharmacogenomics data","text":"PharmacoSet class container pharmacogenomic data. pharmacogenomic data typically generated high-throughput screening experiments cell lines treated panel drugs multiple doses response measured using molecular assay. Pharmacogenomic data located PharmacoSet within slots, accessed using @ operator. . . . PharmacoSet class structure","code":"slotNames(pset) ## [1] \"treatmentResponse\" \"annotation\"        \"molecularProfiles\" ## [4] \"sample\"            \"treatment\"         \"datasetType\"       ## [7] \"perturbation\"      \"curation\""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"metadata","dir":"Articles","previous_headings":"","what":"Metadata","title":"Module 2: Hands-on with pharmacogenomics data","text":"Metadata cell-lines (samples) drugs (treatments) stored sample treatment slots, respectively. data frames rows corresponding samples treatments columns corresponding metadata fields. metadata fields typically combination data original data source, curated data external sources Cellosaurus, DrugBank, PubChem.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"view-the-sample-slot","dir":"Articles","previous_headings":"Metadata","what":"View the sample slot","title":"Module 2: Hands-on with pharmacogenomics data","text":"can access sampleNames PharmacoSet: . . . get metadata associated samples, can access sample slot: can see sample slot 50 samples PharmacoSet.","code":"PharmacoGx::sampleNames(pset) ##  [1] \"NCI-H23\"     \"HOP-62\"      \"SNB-75\"      \"HL-60(TB)\"   \"A-549\"       ##  [6] \"SF268\"       \"SNB-19\"      \"SF295\"       \"OVCAR-5\"     \"U-251MG\"     ## [11] \"MCF-7\"       \"MDA-MB-231\"  \"MDA-MB-435\"  \"BT-549\"      \"SK-MEL-5\"    ## [16] \"MOLT-4\"      \"DU145\"       \"NCI-ADR-RES\" \"OVCAR-3\"     \"COLO 205\"    ## [21] \"SK-OV-3\"     \"CCRF-CEM\"    \"SR\"          \"IGROV-1\"     \"SW620\"       ## [26] \"Hs 578T\"     \"HCT 116\"     \"UACC-62\"     \"EKVX\"        \"HCT 15\"      ## [31] \"OVCAR-8\"     \"UACC-257\"    \"SF539\"       \"UO-31\"       \"M14\"         ## [36] \"KM12\"        \"T-47D\"       \"Malme-3M\"    \"Caki-1\"      \"A-498\"       ## [41] \"SK-MEL-28\"   \"RPMI-8226\"   \"NCI-H460\"    \"NCI-H322M\"   \"NCI-H226\"    ## [46] \"K-562\"       \"786-O\"       \"SK-MEL-2\"    \"HCC2998\"     \"NCI-H522\" pset@sample |> str() ## 'data.frame':    50 obs. of  7 variables: ##  $ sampleid            : chr  \"NCI-H23\" \"HOP-62\" \"SNB-75\" \"HL-60(TB)\" ... ##  $ tissueid            : chr  \"Lung\" \"Lung\" \"CNS/Brain\" \"Myeloid\" ... ##  $ cellosaurus_disease : chr  \"Lung adenocarcinoma\" \"Lung adenocarcinoma\" \"Glioblastoma\" \"Acute myeloid leukemia\" ... ##  $ cellosaurus_id      : chr  \"CVCL_1547\" \"CVCL_1285\" \"CVCL_1706\" \"CVCL_A794\" ... ##  $ NCI_ALMANAC.sampleid: chr  \"NCI-H23\" \"HOP-62\" \"SNB-75\" \"HL-60(TB)\" ... ##  $ NCI_ALMANAC.disease : chr  \"Non-Small Cell Lung Cancer\" \"Non-Small Cell Lung Cancer\" \"CNS Cancer\" \"Leukemia\" ... ##  $ pharmacodb_cid      : chr  \"NCIH23_1085_2019\" \"HOP62_561_2019\" \"SNB75_1430_2019\" \"HL-60(TB)6502021_\" ..."},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"view-the-treatment-slot","dir":"Articles","previous_headings":"Metadata","what":"View the treatment slot","title":"Module 2: Hands-on with pharmacogenomics data","text":"Similar sample, can access treatmentNames PharmacoSet: . . . get metadata associated treatments, can access treatment slot: also 22 treatments used.","code":"PharmacoGx::treatmentNames(pset) |> head() ## [1] \"Ixabepilone\" \"Clofarabine\" \"Dasatinib\"   \"Vincristine\" \"Imiquimod\"   ## [6] \"Paclitaxel\" pset@treatment |> str() ## 'data.frame':    22 obs. of  3 variables: ##  $ treatmentid: chr  \"Ixabepilone\" \"Clofarabine\" \"Dasatinib\" \"Vincristine\" ... ##  $ cid        : int  6445540 119182 3062316 5978 57469 36314 13342 54611422 2141 176871 ... ##  $ inchikey   : chr  \"FABUFPQFXZVHFB-PVYNADRNSA-N\" \"WDDPHFBMKLOVOX-UHFFFAOYSA-N\" \"ZBNZXTGUTAYRHI-UHFFFAOYSA-N\" \"\" ..."},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"molecular-profiles","dir":"Articles","previous_headings":"","what":"Molecular Profiles","title":"Module 2: Hands-on with pharmacogenomics data","text":"PharmacoGx, molecular profiles refer data measured samples PharmacoSet. can include gene expression, copy number, mutation, type data can measured sample. Molecular Data Type (mDataType) stored SummarizedExperiment. SummarizedExperiment objects stored container called MultiAssayExperiment can accessed molecularProfiles slot.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"multiassayexperiment-and-summarizedexperiment","dir":"Articles","previous_headings":"Molecular Profiles","what":"MultiAssayExperiment and SummarizedExperiment","title":"Module 2: Hands-on with pharmacogenomics data","text":"SummarizedExperiment MultiAssayExperiment classes.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"view-the-molecularprofiles-slot","dir":"Articles","previous_headings":"Molecular Profiles","what":"View the molecularProfiles slot","title":"Module 2: Hands-on with pharmacogenomics data","text":"","code":"pset@molecularProfiles ## A MultiAssayExperiment object of 2 listed ##  experiments with user-defined names and respective classes. ##  Containing an ExperimentList class object of length 2: ##  [1] rnaseq.tpm: SummarizedExperiment with 100 rows and 50 columns ##  [2] rnaseq.tpm.batch: SummarizedExperiment with 100 rows and 50 columns ## Functionality: ##  experiments() - obtain the ExperimentList instance ##  colData() - the primary/phenotype DataFrame ##  sampleMap() - the sample coordination DataFrame ##  `$`, `[`, `[[` - extract colData columns, subset, or experiment ##  *Format() - convert into a long or wide DataFrame ##  assays() - convert ExperimentList to a SimpleList of matrices ##  exportClass() - save data to flat files"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"treatment-response","dir":"Articles","previous_headings":"","what":"Treatment Response","title":"Module 2: Hands-on with pharmacogenomics data","text":"treatment response data traditionally stored list. accelerate analysis, developed new class called TreatmentResponseExperiment (TRE) specifically designed handle high dimensional biological stimulus-response data.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"view-the-treatmentresponse-slot","dir":"Articles","previous_headings":"Treatment Response","what":"View the treatmentResponse slot","title":"Module 2: Hands-on with pharmacogenomics data","text":". . . view methods available TreatmentResponseExperiment class, can use methods function:","code":"pset@treatmentResponse ## <TreatmentResponseExperiment>  ##    dim:  4847 52  ##    assays(1): sensitivity  ##    rownames(4847): 1e-07:Ixabepilone:1 1e-06:Ixabepilone:1 ... 1000:Nelarabine:1 4000:Ifosfamide:1  ##    rowData(4): treatmentdose treatmentid tech_rep CONC1  ##    colnames(52): 786-O:1 A-498:1 A-549:1 ... UACC-257:1 UACC-62:1 UO-31:1  ##    colData(3): sampleid bio_rep PANEL  ##    metadata(0): none methods(class = \"TreatmentResponseExperiment\") ##  [1] [                   [[                  [[<-                ##  [4] $                   $<-                 aggregate           ##  [7] assay               assay<-             assayCols           ## [10] assayIndex          assayKeys           assayNames          ## [13] assays              assays<-            buildComboProfiles  ## [16] coerce              colData             colData<-           ## [19] colIDs              colMeta             colnames            ## [22] computeZIPdelta     dim                 dimnames            ## [25] endoaggregate       getIntern           idCols              ## [28] mergeAssays         metadata            metadata<-          ## [31] names               reindex             rowData             ## [34] rowData<-           rowIDs              rowMeta             ## [37] rownames            show                subset              ## [40] treatmentResponse<- updateObject        ## see '?methods' for accessing help and source code"},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"subset-by-samplenames-andor-treatmentnames","dir":"Articles","previous_headings":"Subsetting a PharmacoSet","what":"Subset by sampleNames and/or treatmentNames","title":"Module 2: Hands-on with pharmacogenomics data","text":"subsetting PharmacoSet object sample names, MultiAssayExperiment TreatmentResponseExperiment objects subsetted internal Experiments contain data samples interest. However, subsetting treatment names, TRE object subsetted. . . .","code":"PharmacoGx::subsetBySample(   pset,   sample = PharmacoGx::sampleNames(pset)[1:5] ) ## <PharmacoSet> ## Name: dummy_pset  ## Date Created: Tue Oct 15 23:31:41 2024  ## Number of samples:  5  ## Molecular profiles: <MultiAssayExperiment>  ##    ExperimentList class object of length 2:  ##     [1] rnaseq.tpm : SummarizedExperiment with 100 rows and 5 columns  ##     [2] rnaseq.tpm.batch : SummarizedExperiment with 100 rows and 5 columns  ## Treatment response: <TreatmentResponseExperiment>  ##    dim:  4440 4  ##    assays(1): sensitivity  ##    rownames(4440): 1e-07:Ixabepilone:1 1e-06:Ixabepilone:1 ... 1000:Nelarabine:1 4000:Ifosfamide:1  ##    rowData(4): treatmentdose treatmentid tech_rep CONC1  ##    colnames(4): A-549:1 HOP-62:1 NCI-H23:1 SNB-75:1  ##    colData(3): sampleid bio_rep PANEL  ##    metadata(0): none PharmacoGx::subsetByTreatment(   pset,   treatment = PharmacoGx::treatmentNames(pset)[1:5] ) ## <PharmacoSet> ## Name: dummy_pset  ## Date Created: Tue Oct 15 23:31:41 2024  ## Number of samples:  50  ## Molecular profiles: <MultiAssayExperiment>  ##    ExperimentList class object of length 2:  ##     [1] rnaseq.tpm : SummarizedExperiment with 100 rows and 50 columns  ##     [2] rnaseq.tpm.batch : SummarizedExperiment with 100 rows and 50 columns  ## Treatment response: <TreatmentResponseExperiment>  ##    dim:  883 51  ##    assays(1): sensitivity  ##    rownames(883): 1e-07:Ixabepilone:1 1e-06:Ixabepilone:1 ... 7:Clofarabine:1 10:Clofarabine:1  ##    rowData(4): treatmentdose treatmentid tech_rep CONC1  ##    colnames(51): 786-O:1 A-498:1 A-549:1 ... UACC-257:1 UACC-62:1 UO-31:1  ##    colData(3): sampleid bio_rep PANEL  ##    metadata(0): none"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"subsetting-using-sample-and-treatment-metadata","dir":"Articles","previous_headings":"Subsetting a PharmacoSet","what":"Subsetting using sample and treatment metadata","title":"Module 2: Hands-on with pharmacogenomics data","text":"utility metadata slots PharmacoSet class concise way subset sample one step:","code":"unique(pset@sample$tissueid) ##  [1] \"Lung\"                 \"CNS/Brain\"            \"Myeloid\"              ##  [4] \"Ovary/Fallopian Tube\" \"Breast\"               \"Skin\"                 ##  [7] \"Lymphoid\"             \"Prostate\"             \"Bowel\"                ## [10] \"Kidney\"               \"Pleura\" tissues_of_interest <- c(\"Kidney\")  (samples_of_interest <- pset@sample[   pset@sample$tissueid %in% tissues_of_interest,   \"sampleid\" ] ) ## [1] \"UO-31\"  \"Caki-1\" \"A-498\"  \"786-O\" PharmacoGx::subsetBySample(   pset,   samples_of_interest ) ## <PharmacoSet> ## Name: dummy_pset  ## Date Created: Tue Oct 15 23:31:41 2024  ## Number of samples:  4  ## Molecular profiles: <MultiAssayExperiment>  ##    ExperimentList class object of length 2:  ##     [1] rnaseq.tpm : SummarizedExperiment with 100 rows and 4 columns  ##     [2] rnaseq.tpm.batch : SummarizedExperiment with 100 rows and 4 columns  ## Treatment response: <TreatmentResponseExperiment>  ##    dim:  4285 4  ##    assays(1): sensitivity  ##    rownames(4285): 1e-07:Ixabepilone:1 1e-06:Ixabepilone:1 ... 1000:Nelarabine:1 4000:Ifosfamide:1  ##    rowData(4): treatmentdose treatmentid tech_rep CONC1  ##    colnames(4): 786-O:1 A-498:1 Caki-1:1 UO-31:1  ##    colData(3): sampleid bio_rep PANEL  ##    metadata(0): none PharmacoGx::subsetBySample(   pset,   sample = pset@sample[     pset@sample$tissueid == \"Kidney\",     \"sampleid\"   ] ) ## <PharmacoSet> ## Name: dummy_pset  ## Date Created: Tue Oct 15 23:31:41 2024  ## Number of samples:  4  ## Molecular profiles: <MultiAssayExperiment>  ##    ExperimentList class object of length 2:  ##     [1] rnaseq.tpm : SummarizedExperiment with 100 rows and 4 columns  ##     [2] rnaseq.tpm.batch : SummarizedExperiment with 100 rows and 4 columns  ## Treatment response: <TreatmentResponseExperiment>  ##    dim:  4285 4  ##    assays(1): sensitivity  ##    rownames(4285): 1e-07:Ixabepilone:1 1e-06:Ixabepilone:1 ... 1000:Nelarabine:1 4000:Ifosfamide:1  ##    rowData(4): treatmentdose treatmentid tech_rep CONC1  ##    colnames(4): 786-O:1 A-498:1 Caki-1:1 UO-31:1  ##    colData(3): sampleid bio_rep PANEL  ##    metadata(0): none"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"computing-over-a-treatmentresponseexperiment","dir":"Articles","previous_headings":"","what":"Computing over a TreatmentResponseExperiment","title":"Module 2: Hands-on with pharmacogenomics data","text":"TreatmentResponseExperiment class designed facilitate just storing data efficiently. data curated stored safely inside object, ready start answering questions. First, let’s extract TRE work :","code":"tre <- pset@treatmentResponse show(tre) ## <TreatmentResponseExperiment>  ##    dim:  4847 52  ##    assays(1): sensitivity  ##    rownames(4847): 1e-07:Ixabepilone:1 1e-06:Ixabepilone:1 ... 1000:Nelarabine:1 4000:Ifosfamide:1  ##    rowData(4): treatmentdose treatmentid tech_rep CONC1  ##    colnames(52): 786-O:1 A-498:1 A-549:1 ... UACC-257:1 UACC-62:1 UO-31:1  ##    colData(3): sampleid bio_rep PANEL  ##    metadata(0): none"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"aggregating-over-the-treatmentresponseexperiment","dir":"Articles","previous_headings":"Computing over a TreatmentResponseExperiment","what":"Aggregating over the TreatmentResponseExperiment","title":"Module 2: Hands-on with pharmacogenomics data","text":"aggregate function powerful tool allows us summarize data TreatmentResponseExperiment object. can also use subset function subset TreatmentResponseExperiment object performing aggregate. Additionally, can even subset result aggregate operation.","code":"tre |>   aggregate(     assay = \"sensitivity\",     N = .N,     by = c(\"treatmentid\", \"treatmentdose\", \"sampleid\", \"bio_rep\")   ) ##       treatmentid treatmentdose sampleid bio_rep     N ##            <char>         <num>   <char>   <int> <int> ##    1: Ixabepilone         1e-07    786-O       1     1 ##    2: Ixabepilone         1e-07    A-498       1     1 ##    3: Ixabepilone         1e-07    A-549       1     1 ##    4: Ixabepilone         1e-07   BT-549       1     1 ##    5: Ixabepilone         1e-07 COLO 205       1     1 ##   ---                                                  ## 9036:  Ifosfamide         4e+03    T-47D       1     1 ## 9037:  Ifosfamide         4e+03  U-251MG       1     1 ## 9038:  Ifosfamide         4e+03 UACC-257       1     1 ## 9039:  Ifosfamide         4e+03  UACC-62       1     1 ## 9040:  Ifosfamide         4e+03    UO-31       1     1 tre |>   subset(treatmentid %in% c(\"Doxorubicin\", \"Ixabepilone\")) |>   aggregate(     assay = \"sensitivity\",     N = .N,     by = c(\"treatmentid\", \"treatmentdose\", \"sampleid\", \"bio_rep\")   ) |>   subset(N > 1 & sampleid == \"A-498\") ##     treatmentid treatmentdose sampleid bio_rep     N ##          <char>         <num>   <char>   <int> <int> ##  1: Ixabepilone         3e-05    A-498       1     2 ##  2: Doxorubicin         5e-05    A-498       1   102 ##  3: Ixabepilone         3e-04    A-498       1     2 ##  4: Doxorubicin         5e-04    A-498       1   102 ##  5: Ixabepilone         3e-03    A-498       1    10 ##  6: Doxorubicin         5e-03    A-498       1   122 ##  7: Ixabepilone         3e-02    A-498       1     8 ##  8: Doxorubicin         5e-02    A-498       1   122 ##  9: Ixabepilone         3e-01    A-498       1     8 ## 10: Doxorubicin         5e-01    A-498       1   122 ## 11: Doxorubicin         5e+00    A-498       1   102"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"plotting-the-number-of-replicates","dir":"Articles","previous_headings":"Computing over a TreatmentResponseExperiment > Aggregating over the TreatmentResponseExperiment","what":"Plotting the number of replicates","title":"Module 2: Hands-on with pharmacogenomics data","text":"last two examples shown technical replicates data. can visualize number replicates using histogram.","code":"tre |>   aggregate(     assay = \"sensitivity\",     N = .N,     by = c(\"treatmentid\", \"treatmentdose\", \"sampleid\", \"bio_rep\")   ) |>   with(     expr = hist(       N,       main = \"Histogram of Number of Replicates\",       xlab = \"Number of Replicates\"     )   )"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"summarize-over-technical-replicates","dir":"Articles","previous_headings":"Computing over a TreatmentResponseExperiment > Aggregating over the TreatmentResponseExperiment","what":"Summarize over technical replicates","title":"Module 2: Hands-on with pharmacogenomics data","text":"Depending experiment design, need choose want proceed data. One common approach summarize technical replicates single value, can done taking mean, median, summary statistic.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"endoaggregate","dir":"Articles","previous_headings":"Computing over a TreatmentResponseExperiment","what":"Endoaggregate","title":"Module 2: Hands-on with pharmacogenomics data","text":"interest computation time resources, want summarize technical replicates single value store result inside TreatmentResponseExperiment. , developed endoaggregate method. method perform similar aggregate method, return TreatmentResponseExperiment object summarized data another assay. Let’s use method summarize technical replicates taking mean viability values unique combination treatmentid, treatmentdose, sampleid, bio_rep.","code":"new_tre <- tre |>   endoaggregate(     N = .N,     assay = \"sensitivity\",     target = \"tech_rep_counts\",     by = c(\"treatmentid\", \"treatmentdose\", \"sampleid\", \"bio_rep\")   ) show(new_tre) ## <TreatmentResponseExperiment>  ##    dim:  4847 52  ##    assays(2): sensitivity tech_rep_counts  ##    rownames(4847): 1e-07:Ixabepilone:1 1e-06:Ixabepilone:1 ... 1000:Nelarabine:1 4000:Ifosfamide:1  ##    rowData(4): treatmentdose treatmentid tech_rep CONC1  ##    colnames(52): 786-O:1 A-498:1 A-549:1 ... UACC-257:1 UACC-62:1 UO-31:1  ##    colData(3): sampleid bio_rep PANEL  ##    metadata(0): none head(new_tre$tech_rep_counts[order(-N)]) ##    treatmentdose treatmentid    sampleid bio_rep     N ##            <num>      <char>      <char>   <int> <int> ## 1:         0.005 Doxorubicin     HCT 116       1   153 ## 2:         0.050 Doxorubicin     HCT 116       1   153 ## 3:         0.500 Doxorubicin     HCT 116       1   153 ## 4:         0.005 Doxorubicin NCI-ADR-RES       1   132 ## 5:         0.050 Doxorubicin NCI-ADR-RES       1   132 ## 6:         0.500 Doxorubicin NCI-ADR-RES       1   132 tre_avged <- tre |>   endoaggregate(     viability = mean(viability),     assay = \"sensitivity\",     target = \"mean_sensitivity\",     by = c(\"treatmentid\", \"treatmentdose\", \"sampleid\", \"bio_rep\")   ) str(tre_avged$mean_sensitivity) ## Classes 'data.table' and 'data.frame':   9040 obs. of  5 variables: ##  $ treatmentdose: num  1e-07 1e-07 1e-07 1e-07 1e-07 1e-07 1e-07 1e-07 1e-07 1e-07 ... ##  $ treatmentid  : chr  \"Ixabepilone\" \"Ixabepilone\" \"Ixabepilone\" \"Ixabepilone\" ... ##  $ sampleid     : chr  \"786-O\" \"A-498\" \"A-549\" \"BT-549\" ... ##  $ bio_rep      : int  1 1 1 1 1 1 1 1 1 1 ... ##  $ viability    : num  98 99.7 99.3 96 103.7 ... ##  - attr(*, \"sorted\")= chr [1:4] \"treatmentdose\" \"treatmentid\" \"sampleid\" \"bio_rep\" ##  - attr(*, \".internal.selfref\")=<externalptr>"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"computing-profiles","dir":"Articles","previous_headings":"Computing over a TreatmentResponseExperiment","what":"Computing profiles","title":"Module 2: Hands-on with pharmacogenomics data","text":"didn’t subset TRE computation taken since computationally intensive operation run single thread. hood, CoreGx package performs aggregation. speed computation, provides nthread parameter parallelize computation. determine safe, optimal number threads use, can use CoreGx::optimizeCoreGx function tell us safe number threads. NOTE: following two code chunks evaluated vignette may take time. Depending device, number may vary. Let’s use conservative number threads example. Let’s look profiles computed:","code":"tre_profiled <- tre_avged |>   endoaggregate(     {       fit <- PharmacoGx::logLogisticRegression(treatmentdose, viability)       IC50 <- PharmacoGx::computeIC50(treatmentdose, Hill_fit = fit)       AAC <- PharmacoGx::computeAUC(treatmentdose, Hill_fit = fit, area.type = \"Fitted\")       list(         HS = fit[[\"HS\"]], E_inf = fit[[\"E_inf\"]] / 100, EC50 = fit[[\"EC50\"]],         Rsq = as.numeric(unlist(attributes(fit))),         AAC = AAC,         IC50 = IC50       )     },     assay = \"mean_sensitivity\",     subset = treatmentid %in% rowData(tre_avged)[, unique(treatmentid)][1:3],     by = c(\"treatmentid\", \"sampleid\", \"bio_rep\"),     enlist = FALSE,     target = \"profiles\"   ) CoreGx::optimizeCoreGx(tre_avged) THREADS <- 6 # github runners provide 2c  tre_profiled <- tre_avged |>   endoaggregate(     {       fit <- PharmacoGx::logLogisticRegression(treatmentdose, viability)       IC50 <- PharmacoGx::computeIC50(treatmentdose, Hill_fit = fit)       AAC <- PharmacoGx::computeAUC(treatmentdose, Hill_fit = fit, area.type = \"Fitted\")       list(         HS = fit[[\"HS\"]], E_inf = fit[[\"E_inf\"]] / 100, EC50 = fit[[\"EC50\"]],         Rsq = as.numeric(unlist(attributes(fit))),         AAC = AAC,         IC50 = IC50,         mindose = min(treatmentdose),         maxdose = max(treatmentdose),         numdose = length(unique(treatmentdose)),         minviability = min(viability),         maxviability = max(viability)       )     },     assay = \"mean_sensitivity\",     by = c(\"treatmentid\", \"sampleid\", \"bio_rep\"),     enlist = FALSE,     target = \"profiles\",     nthread = THREADS   ) show(tre_profiled) ## <TreatmentResponseExperiment>  ##    dim:  4847 52  ##    assays(3): sensitivity mean_sensitivity profiles  ##    rownames(4847): 1e-07:Ixabepilone:1 1e-06:Ixabepilone:1 ... 1000:Nelarabine:1 4000:Ifosfamide:1  ##    rowData(4): treatmentdose treatmentid tech_rep CONC1  ##    colnames(52): 786-O:1 A-498:1 A-549:1 ... UACC-257:1 UACC-62:1 UO-31:1  ##    colData(3): sampleid bio_rep PANEL  ##    metadata(0): none tre_profiled$profiles ## Key: <treatmentid, sampleid, bio_rep> ##      treatmentid sampleid bio_rep    HS      E_inf  EC50       Rsq       AAC ##           <char>   <char>   <int> <num>      <num> <num>     <num>     <num> ##   1: Ixabepilone    786-O       1     1 0.22057530  0.03 0.9794689 12.531587 ##   2: Ixabepilone    A-498       1     1 0.31290066  0.03 0.9789242 11.047180 ##   3: Ixabepilone    A-549       1     1 0.14355321  0.03 0.9457645 13.769947 ##   4: Ixabepilone   BT-549       1     1 0.20976649  0.03 0.9608561 12.705370 ##   5: Ixabepilone CCRF-CEM       1     1 0.02700157  0.03 0.8583904 25.321277 ##  ---                                                                         ## 147: Vinblastine    T-47D       1     1 0.54684798  0.05 0.3701465  5.404228 ## 148: Vinblastine  U-251MG       1     1 0.23576667  0.01 0.5443226 19.888382 ## 149: Vinblastine UACC-257       1     1 0.50895401  0.05 0.3843545  5.856146 ## 150: Vinblastine  UACC-62       1     1 0.31347623  0.01 0.5809319 17.866071 ## 151: Vinblastine    UO-31       1     1 0.68541114  0.10 0.6336420  2.367176 ##            IC50 ##           <num> ##   1: 0.05368172 ##   2: 0.08017131 ##   3: 0.04208202 ##   4: 0.05168252 ##   5: 0.03171258 ##  ---            ## 147:         NA ## 148: 0.01892267 ## 149:         NA ## 150: 0.02680624 ## 151:         NA"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"quality-control-of-pharmacogenomic-datasets","dir":"Articles","previous_headings":"","what":"Quality Control of Pharmacogenomic Datasets","title":"Module 2: Hands-on with pharmacogenomics data","text":"remainder lab, briefly go common scenarios require quality control. load new molecular profile.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"checking-for-missing-values","dir":"Articles","previous_headings":"Quality Control of Pharmacogenomic Datasets","what":"Checking for missing values","title":"Module 2: Hands-on with pharmacogenomics data","text":"exercise, purposely put gene many missing values. Let’s look gene. code quantify number NA values row (gene). see GENE002 25 NA values. important consider proportion NA values relative number observations. can quickly calculate proportion: Now know 50% samples NA value rather expression level GENE002. can indicative technical issue. Let’s remove gene downstream analysis. last line code, check remaining NA values. Since none, can move visualizing data.","code":"# get molecular profile tpm_matrix <- pset@molecularProfiles[[\"rnaseq.tpm.batch\"]] |>   assay() |>   as.data.frame() tpm_matrix[1:5, 1:5] ##            NCI-H23    HOP-62     SNB-75 HL-60(TB)     A-549 ## GENE001 90.5370190  75.59677 104.525210  42.18450  9.391661 ## GENE002 75.5065358  22.05942         NA        NA 82.203007 ## GENE003 85.2218882 103.63729   8.646855  86.64833 42.742828 ## GENE004  0.0749728  89.58816  19.705347  45.51081 75.588726 ## GENE005 57.0379889  80.19416  92.440089  53.37649 66.238551 # get metadata meta <- pset@molecularProfiles[[\"rnaseq.tpm.batch\"]] |> colData() meta |> head() ## DataFrame with 6 rows and 2 columns ##              sampleid   batchid ##           <character> <numeric> ## NCI-H23       NCI-H23         1 ## HOP-62         HOP-62         1 ## SNB-75         SNB-75         1 ## HL-60(TB)   HL-60(TB)         2 ## A-549           A-549         2 ## SF268           SF268         2 apply(tpm_matrix, 1, function(x) sum(is.na(x))) |> head() ## GENE001 GENE002 GENE003 GENE004 GENE005 GENE006  ##       0      25       0       0       0       0 # print only genes with NA values sum_NA <- apply(tpm_matrix, 1, function(x) sum(is.na(x))) sum_NA[sum_NA > 0] ## GENE002  ##      25 num_NA <- sum_NA[sum_NA > 0] |> unname() num_observations <- ncol(tpm_matrix)  # get proportion num_NA / num_observations ## [1] 0.5 tpm_matrix <- tpm_matrix[-which(rownames(tpm_matrix) == \"GENE002\"), ] any(is.na(tpm_matrix)) ## [1] FALSE"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"principal-component-analysis-for-outlier-removal","dir":"Articles","previous_headings":"Quality Control of Pharmacogenomic Datasets","what":"Principal component analysis for outlier removal","title":"Module 2: Hands-on with pharmacogenomics data","text":"Let’s quickly take look expression matrix . expression matrix currently formatted features (genes) rows samples (cells) columns. Since want PCA visualize samples, need transpose matrix attributes samples (genes) columns instead. expression matrix correct format, can perform PCA using prcomp function. visualize data, plot first two principal components (PCs).  obvious outlier data. can quantitatively identify outlier identifying samples lie beyond threshold 1.5 * IQR first fourth quartiles. Let’s remove T-47D re-plot data.  Now outlier removed, better visualization data. evident data points (samples) tend cluster batch. indicative potential batch effect.","code":"tpm_matrix[1:5, 1:5] ##            NCI-H23    HOP-62     SNB-75 HL-60(TB)     A-549 ## GENE001 90.5370190  75.59677 104.525210  42.18450  9.391661 ## GENE003 85.2218882 103.63729   8.646855  86.64833 42.742828 ## GENE004  0.0749728  89.58816  19.705347  45.51081 75.588726 ## GENE005 57.0379889  80.19416  92.440089  53.37649 66.238551 ## GENE006 26.4142662  74.16214  88.222117  96.38433 44.452740 t_tpm_matrix <- tpm_matrix |>   t() |>   as.data.frame() t_tpm_matrix[1:5, 1:5] ##              GENE001    GENE003    GENE004  GENE005  GENE006 ## NCI-H23    90.537019  85.221888  0.0749728 57.03799 26.41427 ## HOP-62     75.596766 103.637293 89.5881605 80.19416 74.16214 ## SNB-75    104.525210   8.646855 19.7053470 92.44009 88.22212 ## HL-60(TB)  42.184495  86.648331 45.5108051 53.37649 96.38433 ## A-549       9.391661  42.742828 75.5887260 66.23855 44.45274 org_pca <- prcomp(t_tpm_matrix)$x |> as.data.frame()  print(dim(org_pca)) ## [1] 50 50 org_pca[1:5, 1:5] ##                  PC1       PC2       PC3        PC4       PC5 ## NCI-H23   -44.039730 -45.92050  63.97547  -9.390331  42.39060 ## HOP-62     -9.862044  10.97767 -90.24025  40.301276 -27.50330 ## SNB-75     16.981835 -43.81072 -16.12549  -1.423588 -42.08150 ## HL-60(TB)  83.651364  10.58870  59.28436 -24.431547   6.36504 ## A-549       8.510913  84.27694  59.59322  -9.085760  29.08710 # add batch labels org_pca$Batch <- meta$batchid[match(rownames(org_pca), meta$sampleid)] |> as.factor()  # plot p1 <- ggplot(org_pca) +   geom_point(aes(x = PC1, y = PC2, color = Batch), size = 5) +   scale_color_manual(values = c(\"#624763\", \"#B1D3A3\")) +   theme_classic() +   ggtitle(\"Before Batch Correction\") p1 # extract PC scores for given PC scores <- org_pca[[\"PC1\"]]  # compute IQR of given PC iqr <- IQR(scores)  # compute upper and lower thresholds upp_thres <- quantile(scores, 0.75) + 1.5 * iqr low_thres <- quantile(scores, 0.25) - 1.5 * iqr  # print samples with values beyond threshold outlier <- rownames(org_pca)[which(scores < low_thres | scores > upp_thres)] paste(\"Outlier for PC1:\", outlier) |> print() ## [1] \"Outlier for PC1: T-47D\" # remove outlier outlier <- \"T-47D\" tpm_matrix[[outlier]] <- NULL  # redo PCA and plotting org_pca <- prcomp(t(tpm_matrix))$x |> as.data.frame() org_pca$Batch <- meta$batchid[match(rownames(org_pca), meta$sampleid)] |> as.factor()  p1 <- ggplot(org_pca) +   geom_point(aes(x = PC1, y = PC2, color = Batch), size = 5) +   scale_color_manual(values = c(\"#624763\", \"#B1D3A3\")) +   theme_classic() +   ggtitle(\"Before Batch Correction\")  p1"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module2.html","id":"adjusting-for-known-batches","dir":"Articles","previous_headings":"Quality Control of Pharmacogenomic Datasets","what":"Adjusting for known batches","title":"Module 2: Hands-on with pharmacogenomics data","text":"known batch, can adjust directly. One method use ComBat() function sva package. can now perform PCA visualize adjusted TPM counts matrix. compare results original PCA visualization. Don’t forget transpose adjusted counts matrix!  downstream pharmacogenomic analysis (bioinformatic analysis), batch-corrected expression matrix used. downstream pharmacogenomic analysis (bioinformatic analysis), batch-corrected expression matrix used.","code":"# adjust for known batch adj_tpm_matrix <- ComBat(   dat = tpm_matrix,   batch = as.factor(meta$batchid[match(colnames(tpm_matrix), meta$sampleid)]),   par.prior = TRUE,   prior.plots = FALSE ) ## Found2batches ## Adjusting for0covariate(s) or covariate level(s) ## Standardizing Data across genes ## Fitting L/S model and finding priors ## Finding parametric adjustments ## Adjusting the Data adj_tpm_matrix[1:5, 1:5] ##           NCI-H23   HOP-62    SNB-75 HL-60(TB)     A-549 ## GENE001 81.991219 68.65465 94.477925  46.14868  9.844954 ## GENE003 78.009018 94.55152  9.221893  94.18421 46.353576 ## GENE004  2.112512 81.72158 19.570898  48.84136 82.434411 ## GENE005 53.126927 73.84929 84.808130  57.36965 71.508314 ## GENE006 25.252026 67.80845 80.339726 106.46140 48.702080 # perform PCA on adjusted matrix  adj_pca <- prcomp(t(adj_tpm_matrix))$x |> as.data.frame() adj_pca$Batch <- meta$batchid[match(rownames(adj_pca), meta$sampleid)] |> as.factor()  # create scatter plot p2 <- ggplot(adj_pca) +   geom_point(aes(x = PC1, y = PC2, color = Batch), size = 5) +   scale_color_manual(values = c(\"#624763\", \"#B1D3A3\")) +   theme_classic() +   ggtitle(\"After Batch Correction\")  # plot both plots side by side for comparison ggarrange(p1, p2, ncol = 2)"},{"path":[]},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"instructors-names-and-contact-information","dir":"Articles","previous_headings":"Lab 3 Overview","what":"Instructor(s) name(s) and contact information","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"Jermiah J. Joseph jermiah.joseph@uhn.ca Nikta Feizi <> Julia Nguyen julia.nguyen@uhn.ca","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"pharmacogx-package-overview","dir":"Articles","previous_headings":"Lab 3 Overview","what":"PharmacoGx Package Overview","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"PharmacoGx: R package analyzing pharmacogenomic datasets. Key Functions: Install Load PharmacoGx Download PharmacoSet Extract Drug Response Data Extract Gene Expression Data Data Retrieval: availablePSets(): Lists available pharmacogenomic datasets. Downloading Multiple PharmacoSets: Accessing Molecular Profiles:","code":"install.packages(\"BiocManager\") BiocManager::install(\"PharmacoGx\") library(PharmacoGx) availablePSets() GDSC <- downloadPSet(\"GDSC_2020(v2-8.2)\") # downloadPSet(): Download pharmacogenomic datasets. drug_response <- summarizeSensitivityProfiles(GDSC, sensitivity.measure='aac_recomputed') # summarizeSensitivityProfiles(): Summarize drug response data. gene_expr <- summarizeMolecularProfiles(GDSC, mDataType='rna')  gene_expr_mtx <- assay(gene_expr) PSet.list <- lapply(c(\"GDSC\", \"CCLE\", \"CTRP\"), downloadPSet) names(PSet.list) <- c(\"GDSC\", \"CCLE\", \"CTRP\") molecular.data <- lapply(PSet.list, function(pset) {   summarizeMolecularProfiles(pset, mDataType = 'rna') })"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"introduction","dir":"Articles","previous_headings":"Lab 3 Overview","what":"Introduction","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"workshop, explore data integration comparative analysis using PharmacoGx package, focusing GDSC CCLE datasets. Specifically, cover drug sensitivity comparisons using AUC IC50 measures investigate correlations gene expression profiles. R Markdown file designed give participants hands-experience data exploration interpretation.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"learning-objectives","dir":"Articles","previous_headings":"Lab 3 Overview > Introduction","what":"Learning Objectives","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"Learn load handle data GDSC CCLE datasets. Understand summarize drug sensitivity profiles molecular data. Perform correlations assess concordance cell line datasets. Visualize interpret results statistical tests.","code":""},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"load-gdsc-and-ccle-datasets","dir":"Articles","previous_headings":"Lab 3 Overview > Exploring GDSC and CCLE Datasets","what":"Load GDSC and CCLE Datasets","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"use GDSCsmall CCLEsmall sample datasets provided PharmacoGx compare two data sources.","code":"data(\"GDSCsmall\") data(\"CCLEsmall\") GDSCsmall ## <PharmacoSet> ## Name: GDSC  ## Date Created: Mon Aug 24 15:18:23 2015  ## Number of samples:  10  ## Molecular profiles:  ## RNA : ##   Dim: 300, 11  ## rna2 : ##   Dim: 300, 9  ## mutation : ##   Dim: 70, 10  ## Treatment response: Drug pertubation: ##    Please look at pertNumber(cSet) to determine number of experiments  for each drug-sample combination. ## Drug sensitivity: ##    Number of Experiments:  972  ##    Please look at sensNumber(cSet) to determine number of  experiments for each drug-sample combination."},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"find-common-genes-between-gdsc-and-ccle","dir":"Articles","previous_headings":"Lab 3 Overview > Exploring GDSC and CCLE Datasets","what":"Find Common Genes Between GDSC and CCLE","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"first step comparing datasets find shared features . , identify genes present datasets. 41 genes common RNA profiles GDSC CCLE datasets.","code":"commonGenes <- intersect(fNames(GDSCsmall, \"rna\"), fNames(CCLEsmall, \"rna\")) length(commonGenes) ## [1] 41"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"identify-common-cell-lines-and-drugs","dir":"Articles","previous_headings":"Lab 3 Overview > Exploring GDSC and CCLE Datasets","what":"Identify Common Cell Lines and Drugs","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"Next, identify common cell lines drugs GDSC CCLE. 9 common samples GDSC CCLE. intersectPSet function returns list two PSets subsetted include common cell lines. Notice molecular profiles subsetted include 9 common samples. odd cases include RNA GDSC technical replicate (hence 10 samples) CNV CCLE missing CNV profiles two nine cell lines.","code":"common <- intersectPSet(   list(\"CCLE\" = CCLEsmall, \"GDSC\" = GDSCsmall),   intersectOn = c(\"cell.lines\", \"drugs\"),   strictIntersect = TRUE ) ## Intersecting large PSets may take a long time ... cellNames(common[[1]]) ## [1] \"22RV1\"    \"23132-87\" \"5637\"     \"639-V\"    \"647-V\"    \"697\"      \"769-P\"    ## [8] \"786-0\"    \"8-MG-BA\" length(cellNames(common[[1]])) ## [1] 9 common ## $CCLE ## <PharmacoSet> ## Name: CCLE  ## Date Created: Fri Nov  6 14:00:53 2015  ## Number of samples:  9  ## Molecular profiles:  ## RNA : ##   Dim: 50, 9  ## RNAseq : ##   Dim: 50, 9  ## mutation : ##   Dim: 1667, 9  ## CNV : ##   Dim: 50, 7  ## Treatment response: Drug pertubation: ##    Please look at pertNumber(cSet) to determine number of experiments  for each drug-sample combination. ## Drug sensitivity: ##    Number of Experiments:  102  ##    Please look at sensNumber(cSet) to determine number of  experiments for each drug-sample combination. ##  ## $GDSC ## <PharmacoSet> ## Name: GDSC  ## Date Created: Mon Aug 24 15:18:23 2015  ## Number of samples:  9  ## Molecular profiles:  ## RNA : ##   Dim: 300, 10  ## rna2 : ##   Dim: 300, 9  ## mutation : ##   Dim: 70, 9  ## Treatment response: Drug pertubation: ##    Please look at pertNumber(cSet) to determine number of experiments  for each drug-sample combination. ## Drug sensitivity: ##    Number of Experiments:  79  ##    Please look at sensNumber(cSet) to determine number of  experiments for each drug-sample combination."},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"summarize-drug-sensitivity-profiles","dir":"Articles","previous_headings":"Lab 3 Overview > Exploring GDSC and CCLE Datasets","what":"Summarize Drug Sensitivity Profiles","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"summarize drug sensitivity profiles (AUC IC50) dataset. summary.stat parameter can set different statistical metrics mean, median, etc. , use median summarizing sensitivity. can visualize distribution drug sensitivity profiles compare two psets. First quickly reformat data long format facilitate plotting. use melt() function reshape2 package. Next, can create quick box plot visualize AUC distributions per drug.  Let’s GDSC PSet can compare two  Preclinical drug response data fairly noisy, hence variation see two datasets. However, see commonalities distribution.","code":"# Summary statistics for AUC GDSC.auc <- summarizeSensitivityProfiles(   common$GDSC,   sensitivity.measure = \"auc_published\",   summary.stat = \"median\",   verbose = FALSE ) CCLE.auc <- summarizeSensitivityProfiles(   common$CCLE,   sensitivity.measure = \"auc_published\",   summary.stat = \"median\",   verbose = FALSE )  # Summary statistics for IC50 GDSC.ic50 <- summarizeSensitivityProfiles(   common$GDSC,   sensitivity.measure = \"ic50_published\",   summary.stat = \"median\",   verbose = FALSE ) CCLE.ic50 <- summarizeSensitivityProfiles(   common$CCLE,   sensitivity.measure = \"ic50_published\",   summary.stat = \"median\",   verbose = FALSE ) CCLE.auc |> head() ##               22RV1 23132-87      5637     639-V 647-V       697      769-P ## PD-0325901 0.385000       NA 0.1708125 0.3088750    NA 0.2291000 0.23250000 ## 17-AAG     0.372460       NA 0.4828250 0.4877500    NA 0.3420875 0.40937500 ## Nilotinib  0.000000       NA 0.0072625 0.0710125    NA 0.1573375 0.00000000 ## PHA-665752 0.094375       NA 0.0000000 0.0194000    NA 0.1609750 0.09427143 ## lapatinib  0.036125       NA 0.2212250 0.0066000    NA 0.0453250 0.16475000 ## Nutlin-3   0.076925       NA 0.0000000 0.0666625    NA 0.2588125 0.08598571 ##                 786-0   8-MG-BA ## PD-0325901 0.13862500 0.0758750 ## 17-AAG     0.44162500 0.4426500 ## Nilotinib  0.07501250        NA ## PHA-665752 0.07408625 0.3962500 ## lapatinib  0.12987500 0.0547625 ## Nutlin-3   0.00000000 0.0655125 CCLE_toPlot <- melt(CCLE.auc) colnames(CCLE_toPlot) <- c(\"Drug\", \"Gene\", \"AUC\")  CCLE_toPlot |> head() ##         Drug  Gene      AUC ## 1 PD-0325901 22RV1 0.385000 ## 2     17-AAG 22RV1 0.372460 ## 3  Nilotinib 22RV1 0.000000 ## 4 PHA-665752 22RV1 0.094375 ## 5  lapatinib 22RV1 0.036125 ## 6   Nutlin-3 22RV1 0.076925 ggplot(CCLE_toPlot, aes(x = Drug, y = AUC)) + geom_boxplot(fill = \"grey\") +   theme_classic() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #rotate x-axis labels ## Warning: Removed 33 rows containing non-finite outside the scale range ## (`stat_boxplot()`). # format the CCLE sensitivity data GDSC_toPlot <- melt(GDSC.auc) colnames(GDSC_toPlot) <- c(\"Drug\", \"Gene\", \"AUC\")  # merge the two pset dataframes GDSC_toPlot$PSet <- \"GDSC\" CCLE_toPlot$PSet <- \"CCLE\" merge_toPlot <- rbind(GDSC_toPlot, CCLE_toPlot)  # plot to compare AUC distribution between PSets ggplot(merge_toPlot, aes(x = Drug, y = AUC)) + geom_boxplot(aes(fill = PSet)) +   scale_fill_manual(values = c(\"#624763\", \"#B1D3A3\")) + theme_classic() +    theme(axis.text.x = element_text(angle = 45, hjust = 1)) #rotate x-axis labels ## Warning: Removed 89 rows containing non-finite outside the scale range ## (`stat_boxplot()`)."},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"summarize-gene-expression-profiles","dir":"Articles","previous_headings":"Lab 3 Overview > Exploring GDSC and CCLE Datasets","what":"Summarize Gene Expression Profiles","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"summarize gene expression data genes common GDSC CCLE. , PCA profiles quickly check data. skip step interest time.","code":"GDSCexpression <- summarizeMolecularProfiles(   common$GDSC, cellNames(common$GDSC),   mDataType = \"rna\", features = commonGenes, verbose = FALSE ) |> assay() CCLEexpression <- summarizeMolecularProfiles(   common$CCLE, cellNames(common$CCLE),   mDataType = \"rna\", features = commonGenes, verbose = FALSE ) |> assay()   GDSCexpression |> head() ##                     22RV1  23132-87      5637     639-V     647-V       697 ## ENSG00000000003  5.890740  6.243345 10.018953  9.653157 10.039302  5.215355 ## ENSG00000000005  4.448758  4.335738  4.108065  4.014940  4.250878  4.367339 ## ENSG00000000419 10.427302 11.045576 11.611295 11.604278 11.248686 10.572231 ## ENSG00000000457  5.905884  6.900556  5.684007  5.392485  5.748209  5.934834 ## ENSG00000000460  6.010605  5.433439  5.729120  5.439058  6.453635  6.342021 ## ENSG00000000938  4.410785  4.329849  4.397001  4.176387  4.275824  4.618786 ##                    769-P     786-0   8-MG-BA ## ENSG00000000003 8.615450  7.304893  7.994002 ## ENSG00000000005 4.722970  4.235424  4.447925 ## ENSG00000000419 9.927782 10.825907 10.759706 ## ENSG00000000457 6.475836  5.087249  4.994176 ## ENSG00000000460 5.999142  5.001772  6.073944 ## ENSG00000000938 5.003250  4.443563  4.797094"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"correlation-analysis-between-gdsc-and-ccle","dir":"Articles","previous_headings":"Lab 3 Overview","what":"Correlation Analysis Between GDSC and CCLE","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"perform correlation analysis examine relationship gene expression, AUC, IC50 measures across GDSC CCLE datasets using Spearman’s correlation. can see RNA-Seq expression values highly correlated across common cell lines. Let’s take look correlation drug response, starting IC50 values. Notice NA values original CCLE IC50 dataset correlation results. pairwise.complete.obs argument used cor() function ensures complete observations (.e. numeric values NA) included pairwise correlations. Since 23132-87 647-V NA values, spearman correlation computed. can quickly compute correlation AUC well.","code":"# get common cell line names cc <- cellNames(common[[1]])  # correlation of gene expression across common cell lines ge.cor <- sapply(cc, function(x, d1, d2) {   stats::cor(     d1[, x], d2[, x],     method = \"spearman\", use = \"pairwise.complete.obs\"   ) }, d1 = GDSCexpression, d2 = CCLEexpression)  ge.cor ##     22RV1  23132-87      5637     639-V     647-V       697     769-P     786-0  ## 0.8658537 0.8844948 0.8935540 0.9202091 0.9106272 0.8893728 0.8939024 0.8681185  ##   8-MG-BA  ## 0.8470383 # quick look at the CCLE IC50 data CCLE.ic50 |> head() ##                22RV1 23132-87       5637     639-V 647-V       697     769-P ## PD-0325901 8.0000000       NA 8.00000000 8.0000000    NA 8.0000000 1.4542717 ## 17-AAG     0.3297017       NA 0.07082279 0.1500945    NA 0.4225712 0.1517988 ## Nilotinib  8.0000000       NA 7.47535467 8.0000000    NA 1.9104344 8.0000000 ## PHA-665752 8.0000000       NA 8.00000000 8.0000000    NA 3.2754419 7.1504111 ## lapatinib  7.8473053       NA 2.30776763 8.0000000    NA 0.8494762 1.0574611 ## Nutlin-3   8.0000000       NA 8.00000000 8.0000000    NA 1.8905237 5.5913019 ##                786-0   8-MG-BA ## PD-0325901 8.0000000 8.0000000 ## 17-AAG     0.2795302 0.2349526 ## Nilotinib  8.0000000        NA ## PHA-665752 8.0000000 8.0000000 ## lapatinib  7.1780353 5.2266199 ## Nutlin-3   8.0000000 8.0000000 # correlation of IC50 values across common drugs and cell lines ic50.cor <- sapply(cc, function(x, d1, d2) {   stats::cor(     d1[, x], d2[, x],     method = \"spearman\", use = \"pairwise.complete.obs\"   ) }, d1 = GDSC.ic50, d2 = CCLE.ic50)  ic50.cor ##     22RV1  23132-87      5637     639-V     647-V       697     769-P     786-0  ## 0.4082483        NA 0.5713800 0.4082483        NA 0.6273461 0.6300619 0.6546537  ##   8-MG-BA  ## 0.3664850 # correlation of AUC values across common drugs and cell lines auc.cor <- sapply(cc, function(x, d1, d2) {   stats::cor(     d1[, x], d2[, x],     method = \"spearman\", use = \"pairwise.complete.obs\"   ) }, d1 = GDSC.auc, d2 = CCLE.auc)  auc.cor ##     22RV1  23132-87      5637     639-V     647-V       697     769-P     786-0  ## 0.0000000        NA 0.7748062 0.8214286        NA 0.3750000 0.8571429 0.4638168  ##   8-MG-BA  ## 0.5414447"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"statistical-comparison","dir":"Articles","previous_headings":"Lab 3 Overview","what":"Statistical Comparison","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"compare correlations using Wilcoxon signed-rank tests see significant differences gene expression correlations drug sensitivity correlations.","code":"w1 <- stats::wilcox.test(   x = ge.cor, y = auc.cor, conf.int = TRUE, exact = FALSE ) w2 <- stats::wilcox.test(   x = ge.cor, y = ic50.cor, conf.int = TRUE, exact = FALSE )  w1 ##  ##  Wilcoxon rank sum test with continuity correction ##  ## data:  ge.cor and auc.cor ## W = 62, p-value = 0.001496 ## alternative hypothesis: true location shift is not equal to 0 ## 95 percent confidence interval: ##  0.06309566 0.51857816 ## sample estimates: ## difference in location  ##               0.347967 w2 ##  ##  Wilcoxon rank sum test with continuity correction ##  ## data:  ge.cor and ic50.cor ## W = 63, p-value = 0.001024 ## alternative hypothesis: true location shift is not equal to 0 ## 95 percent confidence interval: ##  0.2407670 0.4857055 ## sample estimates: ## difference in location  ##              0.3179657 # Display p-values ss <- sprintf(\"GE vs. AUC = %.1E\\nGE vs. IC50 = %.1E\", w1$p.value, w2$p.value) cat(ss) ## GE vs. AUC = 1.5E-03 ## GE vs. IC50 = 1.0E-03"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"boxplot-visualization","dir":"Articles","previous_headings":"Lab 3 Overview > Statistical Comparison","what":"Boxplot Visualization","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"results visualized using boxplots compare correlations across gene expression, AUC, IC50.","code":"boxplot(list(\"GE\" = ge.cor, \"AUC\" = auc.cor, \"IC50\" = ic50.cor),   main = \"Concordance between cell lines\",   ylab = expression(R[s]),   sub = ss,   ylim = c(-1, 1),   col = \"lightgrey\",   pch = 20,   border = \"black\" )"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"statistical-analysis-for-drug-response-associations","dir":"Articles","previous_headings":"Lab 3 Overview","what":"Statistical Analysis for Drug Response Associations","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"final section, focusing computing association feature interest drug response order identify predictive biomarkers. Let’s begin selecting feature drug interest explore. Next, need extract vector gene expression chosen feature drug response chosen drug. Let’s GDSC dataset. Notice PSet already kept samples ordered across various profiles. compute associations, can quickly plot two variables visualize relationship.  scatter plot, see weak positive correlation. Let’s see reflected association analyses.","code":"commonGenes |> head() ## [1] \"ENSG00000000003\" \"ENSG00000000005\" \"ENSG00000000419\" \"ENSG00000000457\" ## [5] \"ENSG00000000460\" \"ENSG00000000938\" feature <- \"ENSG00000000003\"  common$GDSC@treatment |> rownames() ##  [1] \"PD-0325901\" \"17-AAG\"     \"Nilotinib\"  \"PHA-665752\" \"lapatinib\"  ##  [6] \"Nutlin-3\"   \"AZD0530\"    \"Crizotinib\" \"Sorafenib\"  \"PD-0332991\" ## [11] \"paclitaxel\" \"AZD6244\"    \"PLX4720\"    \"TAE684\"     \"Erlotinib\" drug <- \"PD-0325901\" Gene <- GDSCexpression[feature,] Drug <- GDSC.auc[drug,]  Gene ##     22RV1  23132-87      5637     639-V     647-V       697     769-P     786-0  ##  5.890740  6.243345 10.018953  9.653157 10.039302  5.215355  8.615450  7.304893  ##   8-MG-BA  ##  7.994002 Drug ##    22RV1 23132-87     5637    639-V    647-V      697    769-P    786-0  ## 0.029649 0.122911 0.007242 0.279261 0.100351 0.049681 0.179831 0.150231  ##  8-MG-BA  ## 0.034754 # create datafarme to plot toPlot <- data.frame(Gene = Gene, Drug = Drug)  ggplot(toPlot, aes(x = Gene, y = Drug)) + geom_point() +   theme_classic() + labs(x = \"Gene (expr)\", y = \"Drug (AUC)\")"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"concordance-index","dir":"Articles","previous_headings":"Lab 3 Overview > Statistical Analysis for Drug Response Associations","what":"Concordance Index","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"Fist, compute association gene expression data drug response. use concordance.index function survcomp package. concordance index tells us weak inverse association gene expression drug response.","code":"ci <- survcomp::concordance.index(   as.numeric(Drug),                   # drug vector   surv.time = as.numeric(Gene),       # gene vector   surv.event = rep(1,length(Gene)),      outx = TRUE, method=\"noether\", na.rm = TRUE )  cat(\"Concordance Index:\", ci$c.index, \"\\n\",     \"P-value:\", ci$p.value, \"\\n\",     \"Standard Error:\", ci$se, \"\\n\",      \"Upper CI:\", ci$upper,\"\\n\",     \"Lower CI:\", ci$lower) ## Concordance Index: 0.4166667  ##  P-value: 0.07592696  ##  Standard Error: 0.04695301  ##  Upper CI: 0.5086929  ##  Lower CI: 0.3246404"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"pearsons-correlation-coefficient","dir":"Articles","previous_headings":"Lab 3 Overview > Statistical Analysis for Drug Response Associations","what":"Pearson’s Correlation Coefficient","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"Using feature drug, let’s compute association time using Pearson’s correlation. Pearson’s correlation tells us () weak positive linear relationship gene expression drug response. Notice slight difference interpretation concordance index Pearson’s correlation.","code":"ps <- cor.test(   x = Gene,   y = Drug,   alternative = \"two.sided\",   method = \"pearson\" )  cat(\"Pearson's correlation:\", ps$estimate, \"\\n\",     \"P-value:\", ci$p.value, \"\\n\",     \"Confidence Interval:\", ps$conf.int) ## Pearson's correlation: 0.2937677  ##  P-value: 0.07592696  ##  Confidence Interval: -0.4601228 0.8015157"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"drug-sensitivity-signatures-pharmacogx","dir":"Articles","previous_headings":"Lab 3 Overview > Statistical Analysis for Drug Response Associations","what":"Drug Sensitivity Signatures (PharmacoGx)","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"last method explore built-function PharmacoGx package called drugSensitivitySig. function takes PharmacoSet along list drugs features, computes association feature expression drug response pair. Let’s first select first 3 genes drugs features & drugs interest: Now can calculate drug sensitivity signature using vector genes drugs GDSC dataset. Note gene-drug signature based univariable analysis. output 3D array genes x drugs x metric. Outputted estimate pvalue. Feel free explore array components sig.rna@.Data. function powerful method investigating univariate relationship multiple molecular features drugs. Let’s mutations, ’ll quick example using one gene drug CCLE dataset.","code":"features <- commonGenes[1:3] drugs <- rownames(common$GDSC@treatment)[1:3]  features ## [1] \"ENSG00000000003\" \"ENSG00000000005\" \"ENSG00000000419\" drugs ## [1] \"PD-0325901\" \"17-AAG\"     \"Nilotinib\" # gene expression signature sig.rna <- drugSensitivitySig(   object = GDSCsmall,   mDataType = \"rna\",   drugs = drugs,   features = features,   sensitivity.measure = \"auc_published\",   molecular.summary.stat = \"median\",   sensitivity.summary.stat = \"median\",   modeling.method = \"pearson\",   verbose = FALSE ) sig.rna@.Data[,,c(1,5)] ## , , estimate ##  ##                  PD-0325901     17-AAG  Nilotinib ## ENSG00000000003 -0.18840373 -0.2369481  0.8554590 ## ENSG00000000005 -0.14409315 -0.4756331  0.7875267 ## ENSG00000000419 -0.02890968  0.5466780 -0.8239237 ##  ## , , pvalue ##  ##                 PD-0325901    17-AAG Nilotinib ## ENSG00000000003  0.8793373 0.8477058 0.3465502 ## ENSG00000000005  0.9079470 0.6844380 0.4227225 ## ENSG00000000419  0.9815930 0.6317843 0.3835609 # mutation signature sig.mut <- drugSensitivitySig(   object = CCLEsmall,   mDataType = \"mutation\",   drugs = \"PD-0325901\",   features = \"BRAF\",   sensitivity.measure = \"auc_published\",   molecular.summary.stat = \"and\",   sensitivity.summary.stat = \"median\",   verbose = FALSE ) sig.mut@.Data[,,c(1,6)] ##     estimate       pvalue  ## 8.251857e-01 1.612881e-09"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"univariate-vs-multivariate-analysis","dir":"Articles","previous_headings":"Lab 3 Overview","what":"Univariate vs Multivariate Analysis","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"final section lab, explore univariate vs multivariate linear modeling. Let’s start simple univariate linear model using Gene Drug vector earlier.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"univariate-analysis","dir":"Articles","previous_headings":"Lab 3 Overview > Univariate vs Multivariate Analysis","what":"Univariate Analysis","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"Recall Gene RNA expression vector ENSG00000000005 Drug drug response vector (AUC) PD-0325901 GDSC dataset. Let’s break output: Residuals: difference predicted y (drug response) values actual y values. larger range suggests model may good fit data. Coefficients: parameters model. - Estimate can considered effect size. Specifically, one-unit change y variable (drug response) per one-unit change x variable (gene expression). estimate drug~gene association 0.014028. - Pr(>|t|) corresponding p-value estimate. p-value drug~gene association test 0.443. Note: coefficients met p-value < 0.05 significance threshold, seen * beside estimate (unfortunately, association meet threshold). Let’s see can make multi-variate model better performance. second gene feature adding model ENSG00000000005. Take look output, comparing previous model ran. think adding additional gene improved model performance?","code":"lm(Drug ~ Gene) |> summary() ##  ## Call: ## lm(formula = Drug ~ Gene) ##  ## Residuals: ##      Min       1Q   Median       3Q      Max  ## -0.12867 -0.04835 -0.01884  0.05239  0.14848  ##  ## Coefficients: ##              Estimate Std. Error t value Pr(>|t|) ## (Intercept) -0.004639   0.139300  -0.033    0.974 ## Gene         0.014028   0.017253   0.813    0.443 ##  ## Residual standard error: 0.08965 on 7 degrees of freedom ## Multiple R-squared:  0.0863, Adjusted R-squared:  -0.04423  ## F-statistic: 0.6612 on 1 and 7 DF,  p-value: 0.4429 # get another gene vector commonGenes[2] ## [1] \"ENSG00000000005\" Gene2 <- GDSCexpression[commonGenes[2],]  # multi-variate model lm(Drug ~ Gene + Gene2) |> summary() ##  ## Call: ## lm(formula = Drug ~ Gene + Gene2) ##  ## Residuals: ##      Min       1Q   Median       3Q      Max  ## -0.13292 -0.04715 -0.02147  0.04840  0.14047  ##  ## Coefficients: ##             Estimate Std. Error t value Pr(>|t|) ## (Intercept)  0.15618    0.84445   0.185    0.859 ## Gene         0.01251    0.02017   0.620    0.558 ## Gene2       -0.03441    0.17780  -0.194    0.853 ##  ## Residual standard error: 0.09653 on 6 degrees of freedom ## Multiple R-squared:  0.09197,    Adjusted R-squared:  -0.2107  ## F-statistic: 0.3038 on 2 and 6 DF,  p-value: 0.7487"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module3.html","id":"individual-practice","dir":"Articles","previous_headings":"Lab 3 Overview","what":"Individual Practice","title":"Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","text":"remainder lab, please explore associations features drug response. Try using CCLE pset !","code":""},{"path":[]},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module4.html","id":"instructors-names-and-contact-information","dir":"Articles","previous_headings":"Lab 4 Overview","what":"Instructor(s) name(s) and contact information","title":"Module 4: Pharmacogenomics for biomarker discovery - Advanced analysis","text":"Nikta Feizi nikta.feizi@uhn.ca Julia Nguyen julia.nguyen@uhn.ca","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module4.html","id":"introduction","dir":"Articles","previous_headings":"Lab 4 Overview","what":"Introduction","title":"Module 4: Pharmacogenomics for biomarker discovery - Advanced analysis","text":"workshop touch advanced statistical methods univariate biomarker discovery. primarily cover meta-analysis techniques sub-group analysis.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module4.html","id":"learning-objectives","dir":"Articles","previous_headings":"Lab 4 Overview > Introduction","what":"Learning Objectives","title":"Module 4: Pharmacogenomics for biomarker discovery - Advanced analysis","text":"end lab, participants able : Execute meta-analysis using multiple PharmacoSets evaluate biomarker interest across different cancer types. Generate interpret forest plots visualize effect sizes. Perform subgroup analyses using small subset CCLE dataset. Understand preprocessing steps required pharmacogenomic data. Assess assumptions model diagnostics linear regression models.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module4.html","id":"data-acquisition-and-preparation","dir":"Articles","previous_headings":"Lab 4 Overview","what":"Data Acquisition and Preparation","title":"Module 4: Pharmacogenomics for biomarker discovery - Advanced analysis","text":"Like , use smaller versions PharmacoSets workshop minimize processing time. Let’s load datasets subset common cell lines .","code":"# load in the datasets data(\"GDSCsmall\") data(\"CCLEsmall\")"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module4.html","id":"extracting-required-vectors-for-biomarker-analysis","dir":"Articles","previous_headings":"Lab 4 Overview > Data Acquisition and Preparation","what":"Extracting required vectors for biomarker analysis","title":"Module 4: Pharmacogenomics for biomarker discovery - Advanced analysis","text":"Recall two components needed biomarker association analysis: - Feature data (molecular profile) - Drug response Say interested ENSG00000003987 expression association PD-0325901. can start extracting data PSets. Gene Expression Data Drug Response Data Next, let’s take look available drug response data can see options drug response metrics choose . use auc_published drug response associations. summarizeSensitivityProfiles() function nicely pulls drug response data converts sample~drug matrix easy use. need drug response data PD-0325901, let’s pull .","code":"# specify our gene of interest gene <- \"ENSG00000003987\"   # extract the RNA-Seq data for our gene of interest in both GDSC and CCLE ccle_rna_data <- summarizeMolecularProfiles(   CCLEsmall,   mDataType = \"rna\", features = gene ) |> assay()  gdsc_rna_data <- summarizeMolecularProfiles(   GDSCsmall,   mDataType = \"rna\", features = gene ) |> assay() #>   |                                                                              |                                                                      |   0%  |                                                                              |======================================================================| 100% gdsc_rna_data #>                    22RV1 23132-87      380     5637    639-V    647-V     697 #> ENSG00000003987 4.197327 4.022529 4.000509 4.031896 3.977781 3.834624 4.36307 #>                    769-P    786-0  8-MG-BA #> ENSG00000003987 4.397028 3.973001 4.275385 sensitivityProfiles(CCLEsmall) |> head() #>                        ic50_published auc_published amax_published #> drugid_AEW541_1321N1         8.000000     0.0873750      -42.55801 #> drugid_AEW541_22Rv1          2.329924     0.2205000      -71.58934 #> drugid_AEW541_42-MG-BA       2.682130     0.1144375      -63.49137 #> drugid_AEW541_5637           5.002314     0.1243550      -62.35278 #> drugid_AEW541_639-V          1.736181     0.1936250      -51.95981 #> drugid_AEW541_697            4.260822     0.1087625      -73.33379 #>                        auc_recomputed ic50_recomputed amax_recomputed #> drugid_AEW541_1321N1        0.1017047        13.09700        42.87563 #> drugid_AEW541_22Rv1         0.2239774         2.18654        70.37213 #> drugid_AEW541_42-MG-BA      0.1215999         2.68981        63.00413 #> drugid_AEW541_5637          0.1092448         5.19939        61.43152 #> drugid_AEW541_639-V         0.1912847         5.40523        54.22604 #> drugid_AEW541_697           0.1146054         4.17688        69.94055 # extract AUC_published data from CCLE and GDSC ccle_auc <- summarizeSensitivityProfiles(   CCLEsmall,   sensitivity.measure = \"auc_published\",   summary.stat = \"median\",   verbose = FALSE )  gdsc_auc <- summarizeSensitivityProfiles(   GDSCsmall,   sensitivity.measure = \"auc_published\",   summary.stat = \"median\",   verbose = FALSE )  ccle_auc[1:5,1:5] #>               1321N1 143B    22RV1 23132-87 253J-BV #> PD-0325901 0.1148875   NA 0.385000       NA      NA #> 17-AAG     0.4177000   NA 0.372460       NA      NA #> AEW541     0.0873750   NA 0.220500       NA      NA #> Nilotinib         NA   NA 0.000000       NA      NA #> PHA-665752 0.0333750   NA 0.094375       NA      NA drug <- \"PD-0325901\" ccle_drug_data <- ccle_auc[drug, ] gdsc_drug_data <- gdsc_auc[drug, ]  head(ccle_drug_data) #>    1321N1      143B     22RV1  23132-87   253J-BV      253J  #> 0.1148875        NA 0.3850000        NA        NA        NA head(gdsc_drug_data) #>    22RV1 23132-87      380     5637    639-V    647-V  #> 0.029649 0.122911       NA 0.007242 0.279261 0.100351"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module4.html","id":"gene-expression-exploratory-data-analysis-eda","dir":"Articles","previous_headings":"Lab 4 Overview > Data Acquisition and Preparation","what":"Gene Expression Exploratory Data Analysis (EDA)","title":"Module 4: Pharmacogenomics for biomarker discovery - Advanced analysis","text":"performing statistical analysis, let’s quickly look distribution ENSG00000003987 expression data. First, can check number cell lines vector: Notice large difference number samples GDSC CCLE. difference sample size may reflected meta-analysis. Let’s quickly look distribution gene PSets.  Notice difference distribution shapes. can imagine implications small sample size (e.g. GDSC) downstream analysis.","code":"paste(\"Number of cell lines in GDSC:\", length(gdsc_rna_data)) #> [1] \"Number of cell lines in GDSC: 10\" paste(\"Number of cell lines in CCLE:\", length(ccle_rna_data)) #> [1] \"Number of cell lines in CCLE: 1061\" p1 <- ggplot(data = t(ccle_rna_data), aes_string(x = gene)) +         geom_histogram(bins = 30, fill = \"skyblue\", color = \"black\") +         labs(           title = stringr::str_c(\"Distribution of \", gene, \" Expression in CCLEsmall\"),           x = \"Expression\", y = \"Frequency\"         ) p2 <- ggplot(data = t(gdsc_rna_data), aes_string(x = gene)) +         geom_histogram(bins = 30, fill = \"skyblue\", color = \"black\") +         labs(           title = stringr::str_c(\"Distribution of \", gene, \" Expression in GDSCsmall\"),           x = \"Expression\", y = \"Frequency\"         ) ggarrange(p1, p2, ncol = 2)"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module4.html","id":"effect-size-calculation","dir":"Articles","previous_headings":"Lab 4 Overview","what":"Effect Size Calculation","title":"Module 4: Pharmacogenomics for biomarker discovery - Advanced analysis","text":"next section, compute associations feature drug within individual PSet. results input meta-analysis. start, let’s confirm samples input ENSG00000003987 expression PD-0325901 response vectors samae order. can use statistical methods discussed Module 3 calculate effect size association ENSG00000003987 expression PD-0325901 response. Let’s try using concordance index:","code":"table(names(gdsc_drug_data) == colnames(gdsc_rna_data)) #>  #> TRUE  #>   10 table(names(ccle_drug_data) == colnames(ccle_rna_data)) #>  #> TRUE  #> 1061  # manually look at the cell line names names(gdsc_drug_data) #>  [1] \"22RV1\"    \"23132-87\" \"380\"      \"5637\"     \"639-V\"    \"647-V\"    #>  [7] \"697\"      \"769-P\"    \"786-0\"    \"8-MG-BA\" colnames(gdsc_rna_data) #>  [1] \"22RV1\"    \"23132-87\" \"380\"      \"5637\"     \"639-V\"    \"647-V\"    #>  [7] \"697\"      \"769-P\"    \"786-0\"    \"8-MG-BA\" # fixing drug response data (to change in subsetted PSet) gdsc_drug_data[3] <- 0.1  # compute concordance index for each pset CCLE_ci <- survcomp::concordance.index(   as.numeric(ccle_drug_data),                   # drug vector   surv.time = as.numeric(ccle_rna_data),        # gene vector   surv.event = rep(1,length(ccle_rna_data)),      outx = TRUE, method=\"noether\", na.rm = TRUE )  cat(\"Concordance Index:\", CCLE_ci$c.index, \"\\n\",     \"P-value:\", CCLE_ci$p.value, \"\\n\",     \"Standard Error:\", CCLE_ci$se, \"\\n\",      \"Upper CI:\", CCLE_ci$upper,\"\\n\",     \"Lower CI:\", CCLE_ci$lower) #> Concordance Index: 0.5352986  #>  P-value: 0.01556791  #>  Standard Error: 0.0145929  #>  Upper CI: 0.5639002  #>  Lower CI: 0.5066971  GDSC_ci <- survcomp::concordance.index(   as.numeric(gdsc_drug_data),                   # drug vector   surv.time = as.numeric(gdsc_rna_data),        # gene vector   surv.event = rep(1,length(gdsc_rna_data)),      outx = TRUE, method=\"noether\", na.rm = TRUE )  cat(\"Concordance Index:\", GDSC_ci$c.index, \"\\n\",     \"P-value:\", GDSC_ci$p.value, \"\\n\",     \"Standard Error:\", GDSC_ci$se, \"\\n\",      \"Upper CI:\", GDSC_ci$upper,\"\\n\",     \"Lower CI:\", GDSC_ci$lower) #> Concordance Index: 0.5777778  #>  P-value: 0.08389382  #>  Standard Error: 0.04499657  #>  Upper CI: 0.6659694  #>  Lower CI: 0.4895861"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module4.html","id":"combine-effect-sizes-and-perform-meta-analysis","dir":"Articles","previous_headings":"Lab 4 Overview","what":"Combine Effect Sizes and Perform Meta-Analysis","title":"Module 4: Pharmacogenomics for biomarker discovery - Advanced analysis","text":"Now can combine effect sizes GDSCsmall CCLEsmall perform meta-analysis. Recall lecture need three variables meta-analysis: - Effect Size (also called Treatment Effect TE) - Standard Error - Dataset Labels (just plotting purposes) Let’s extract information outputs put dataframe. Now can use metagen function meta package perform meta-analysis.","code":"combined <- data.frame(   Concordance.Index = c(GDSC_ci$c.index, CCLE_ci$c.index),   Standard.Error = c(GDSC_ci$se, CCLE_ci$se),   Upper.CI = c(GDSC_ci$upper, CCLE_ci$upper),   Lower.CI = c(GDSC_ci$lower, CCLE_ci$lower),   Dataset = c(\"GDSC\", \"CCLE\") )  combined #>   Concordance.Index Standard.Error  Upper.CI  Lower.CI Dataset #> 1         0.5777778     0.04499657 0.6659694 0.4895861    GDSC #> 2         0.5352986     0.01459290 0.5639002 0.5066971    CCLE meta.result <- metagen(data = combined,   TE = Concordance.Index,   seTE = Standard.Error,   studlab = combined$Dataset )  meta.result #> Number of studies: k = 2 #>  #>                                       95%-CI     z p-value #> Common effect model  0.5393 [0.5121; 0.5665] 38.85       0 #> Random effects model 0.5393 [0.5121; 0.5665] 38.85       0 #>  #> Quantifying heterogeneity: #>  tau^2 = 0; tau = 0; I^2 = 0.0%; H = 1.00 #>  #> Test of heterogeneity: #>     Q d.f. p-value #>  0.81    1  0.3692 #>  #> Details on meta-analytical method: #> - Inverse variance method #> - Restricted maximum-likelihood estimator for tau^2"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module4.html","id":"visualization-with-forest-plots","dir":"Articles","previous_headings":"Lab 4 Overview > Combine Effect Sizes and Perform Meta-Analysis","what":"Visualization with Forest Plots","title":"Module 4: Pharmacogenomics for biomarker discovery - Advanced analysis","text":"forest function meta package can use built forest function meta package quickly create forest plot using output metagen function: forest plot saved device specified file path. also attached plot : PharmacoSet class structure Using ggplot2 can also visualize data usign ggplot2 package. return full forest plot, can get closer look relationship effect sizes individual dataset meta-estimate.  plot , data point representing individual dataset effect sizes, error bars represents confidence interval, vertical line representing meta-analysis treatment estimate. can clearly see red line closer CCLE data point compared GDSC data point. reflective CCLE greater weight due lower variance among considerations.","code":"# set your file path file_path <- \"forest_plot.png\"  # generate forest plot # png(file = file_path, width = 10, height = 4, res = 600, units = \"in\") # forest(meta.result) # dev.off() ggplot(combined, aes(x = Concordance.Index, y = Dataset)) +   geom_point(size = 3) +   geom_errorbarh(aes(xmin = Lower.CI, xmax = Upper.CI), height = 0.2) +   geom_vline(xintercept = meta.result$TE.random, linetype = \"dashed\", color = \"red\") +   labs(     title = \"Meta-Analysis of GeneX Expression and Drug Response\",     x = \"Effect Size\",     y = \"Study\"   ) +   theme_minimal()"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module4.html","id":"subgroup-analysis","dir":"Articles","previous_headings":"Lab 4 Overview","what":"Subgroup Analysis","title":"Module 4: Pharmacogenomics for biomarker discovery - Advanced analysis","text":"now conduct tissue-subgroup analysis using subset CCLEsmall dataset, using steps learned workshop. looking response RNA-Seq data AUC drug response. take discovery approach, looking associations rich dataset.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module4.html","id":"data-preparation","dir":"Articles","previous_headings":"Lab 4 Overview > Subgroup Analysis","what":"Data Preparation","title":"Module 4: Pharmacogenomics for biomarker discovery - Advanced analysis","text":"Let’s start loading looking data. RNA-Seq expression drug response matrix feature~sample format. Next, let’s load metadata cell lines. Since want tissue subgroup analysis, need identify variable gives us tissue type cell line. also need find variable maps column names expr matrix. , make sure samples present metadata Notice cell lines included metadata. want remove samples analysis give tissue label. 936 cell lines RNA-Seq expression, drug response, metadata. keep metadata cell lines. Next, let’s take look tissue types available within samples . large range different tissue types represented CCLE dataset. Let’s select haematopoietic_and_lymphoid_tissue lung tissues largest sample sizes. Let’s subset PSets tissue types. molecular profiles drug response data within tissue-specific pset now subsetted include cell lines respective tissue.","code":"# load in expression data expr <- summarizeMolecularProfiles(CCLEsmall, mDataType='rna') |> assay() expr[1:5,1:5] #>                    1321N1      143B     22RV1  23132-87   253J-BV #> ENSG00000181019 10.907043  9.773744  8.907329 13.961104 12.258347 #> ENSG00000157764  7.072053  6.553047  7.237172  7.462726  7.190695 #> ENSG00000000003  4.052251 10.542824  7.951917  8.079243 10.079808 #> ENSG00000000005  3.430694  3.585748  3.524705  3.580134  3.651864 #> ENSG00000000419 13.477683 12.891333 12.043700 12.200771 12.133981  # load in drug response data auc <- summarizeSensitivityProfiles(   CCLEsmall,   sensitivity.measure = \"auc_published\",   summary.stat = \"median\",   verbose = FALSE ) auc[1:5,1:5] #>               1321N1 143B    22RV1 23132-87 253J-BV #> PD-0325901 0.1148875   NA 0.385000       NA      NA #> 17-AAG     0.4177000   NA 0.372460       NA      NA #> AEW541     0.0873750   NA 0.220500       NA      NA #> Nilotinib         NA   NA 0.000000       NA      NA #> PHA-665752 0.0333750   NA 0.094375       NA      NA # load in metadata meta <- CCLEsmall@molecularProfiles[[\"rna\"]] |> colData() colnames(meta) #>  [1] \"samplename\"                \"filename\"                  #>  [3] \"chiptype\"                  \"hybridization.date\"        #>  [5] \"hybridization.hour\"        \"file.day\"                  #>  [7] \"file.hour\"                 \"batch\"                     #>  [9] \"sampleid\"                  \"CCLE.name\"                 #> [11] \"Cell.line.primary.name\"    \"Cell.line.aliases\"         #> [13] \"Gender\"                    \"Site.Primary\"              #> [15] \"Histology\"                 \"Hist.Subtype1\"             #> [17] \"Notes\"                     \"Source\"                    #> [19] \"Expression.arrays\"         \"SNP.arrays\"                #> [21] \"Oncomap\"                   \"Hybrid.Capture.Sequencing\" #> [23] \"batchid\"                   \"rownames\" # show needed column names meta[,c('Cell.line.primary.name', 'Site.Primary')] |> head() #> DataFrame with 6 rows and 2 columns #>                                              Cell.line.primary.name #>                                                         <character> #> NIECE_P_NCLE_RNA3_HG-U133_PLUS_2_B06_296024                  1321N1 #> MAKER_P_NCLE_RNA7_HG-U133_PLUS_2_F09_454702                    143B #> NIECE_P_NCLE_RNA3_HG-U133_PLUS_2_F06_296120                   22Rv1 #> WATCH_P_NCLE_RNA8_HG-U133_PLUS_2_E11_474718                23132/87 #> CRAZY_P_NCLE_RNA10_HG-U133_PLUS_2_A05_569490                253J-BV #> CRAZY_P_NCLE_RNA10_HG-U133_PLUS_2_A03_569510                   253J #>                                                        Site.Primary #>                                                         <character> #> NIECE_P_NCLE_RNA3_HG-U133_PLUS_2_B06_296024  central_nervous_system #> MAKER_P_NCLE_RNA7_HG-U133_PLUS_2_F09_454702                    bone #> NIECE_P_NCLE_RNA3_HG-U133_PLUS_2_F06_296120                prostate #> WATCH_P_NCLE_RNA8_HG-U133_PLUS_2_E11_474718                 stomach #> CRAZY_P_NCLE_RNA10_HG-U133_PLUS_2_A05_569490          urinary_tract #> CRAZY_P_NCLE_RNA10_HG-U133_PLUS_2_A03_569510          urinary_tract  # check for cell lines included in metadata colnames(expr) %in% meta$Cell.line.primary.name |> table() #>  #> FALSE  TRUE  #>   125   936 # identify cell lines with both expression and metadata commonCells <- intersect(colnames(expr), meta$Cell.line.primary.name) paste(\"Number of common cell lines:\", length(commonCells)) #> [1] \"Number of common cell lines: 936\"  # check that all these cell lines also have drug response data commonCells %in% colnames(auc) |> table() #>  #> TRUE  #>  936  # subset metadata to only include these samples meta <- meta[meta$Cell.line.primary.name %in% commonCells,] dim(meta) #> [1] 936  24 meta$Site.Primary |> table() #>  #>                  autonomic_ganglia                      biliary_tract  #>                                 15                                  7  #>                               bone                             breast  #>                                 26                                 56  #>             central_nervous_system                        endometrium  #>                                 59                                 24  #> haematopoietic_and_lymphoid_tissue                             kidney  #>                                168                                 32  #>                    large_intestine                              liver  #>                                 52                                 26  #>                               lung                         oesophagus  #>                                175                                 26  #>                              ovary                           pancreas  #>                                 47                                 38  #>                             pleura                           prostate  #>                                 10                                  5  #>                     salivary_gland                               skin  #>                                  1                                 55  #>                        soft_tissue                            stomach  #>                                 20                                 31  #>                            thyroid          upper_aerodigestive_tract  #>                                 11                                 29  #>                      urinary_tract  #>                                 23 # get cell lines from each tissue lymp_cells <- meta$Cell.line.primary.name[meta$Site.Primary == \"haematopoietic_and_lymphoid_tissue\"] lung_cells <- meta$Cell.line.primary.name[meta$Site.Primary == \"lung\"]  # subset psets to only include cells within each tissue group lymp_pset <- subsetTo(CCLEsmall, cells = lymp_cells) lung_pset <- subsetTo(CCLEsmall, cells = lung_cells)  # quickly check dimensions of the assays in our subsetted psets assay(summarizeMolecularProfiles(lymp_pset, mDataType='rna')) |> dim() #> [1]  50 168"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module4.html","id":"statistical-analysis-to-measure-drug-response-associations","dir":"Articles","previous_headings":"Lab 4 Overview > Subgroup Analysis","what":"Statistical Analysis to measure Drug Response Associations","title":"Module 4: Pharmacogenomics for biomarker discovery - Advanced analysis","text":"Let’s say want discover gene (biomarker) predictive response drug lapatinib. , compute association expression gene lapatinib drug response. First, let’s get assays: PSet already ensured cell line order RNA-Seq expression matrix drug response vector . Don’t forget always check working data. Now compute association gene lapatinib. can use loop quickly : Notice end also computed false discovery rate (FDR) method multiple test correction. repeat code every tissue type. Although working two, imagine wanted tissue types future. Function computing concordance index simply , can turn code function just input expression matrix drug response vector get result without change rest code. function named compute_CI takes two arguments: - expr: expression matrix features rows samples columns - drug_vector: vector drug response order samples expr - drug: string name drug (just putting results dataframe) also added column called FDRsig represents association met FDR < 5% threshold. help us plotting. Visualizing feature-drug associations Now associations genes lapatinib response tissue groups, let’s visualize distribution computed associations. Let’s first rank concordance index. Next, create waterfall plot. ’ve created function , function named plot_waterfall takes following arguments: - ci_results: results matrix compute_CI function - tissue: string tissue type  Notice FDR significant associations within lymp data, lung data. inspect closely, can also see genes predictive power (low high CI values) different two tissue types. Identifying candidate biomarkers see FDR significant associations lung data. Let’s extract genes. 6 genes FDR significant associations lapatinib response. 6, predictive ENSG00000000003 associated resistance (CI < 0.5). next possible step take genes assess association lung tissue-derived cell lines another PSet (meta-analysis!)","code":"# extract the expression assays lymp_expr <- assay(summarizeMolecularProfiles(lymp_pset, mDataType='rna')) lung_expr <- assay(summarizeMolecularProfiles(lung_pset, mDataType='rna'))  # extract the drug response assays lymp_auc <- summarizeSensitivityProfiles(lymp_pset, sensitivity.measure = \"auc_published\",                     summary.stat = \"median\", verbose = FALSE) lung_auc <- summarizeSensitivityProfiles(lung_pset, sensitivity.measure = \"auc_published\",                     summary.stat = \"median\", verbose = FALSE)  # extract just the drug response vector for lapatinib drug <- \"lapatinib\"  lymp_auc <- lymp_auc[drug,] lung_auc <- lung_auc[drug,]   # quickly view the data lymp_expr[1:5,1:5] #>                       697   ALL-SIL   AML-193     AMO-1     BCP-1 #> ENSG00000181019  6.609914  7.032188  7.637502  9.810762 10.006768 #> ENSG00000157764  7.754090  7.138147  7.228066  8.115521  7.197811 #> ENSG00000000003  4.509136  4.072092  3.937972  5.118464  3.846667 #> ENSG00000000005  3.736073  3.661470  3.770592  3.803109  3.660946 #> ENSG00000000419 11.718635 11.769529 12.287833 12.586162 11.837654 lymp_auc[1:5] #>       697   ALL-SIL   AML-193     AMO-1     BCP-1  #> 0.0453250 0.0767875        NA 0.0663875        NA # create data frame to hold results results <- as.data.frame(matrix(data = NA, nrow = 0, ncol = 7)) colnames(results) <- c(\"gene\", \"drug\", \"ci\", \"pvalue\", \"se\", \"upper\", \"lower\")  # get the number of genes (features) num_genes <- nrow(lymp_expr)  # loop through every gene to compute concordance index to drug responses for (gene in rownames(lymp_expr)) {      # compute concordance index   ci <- survcomp::concordance.index(             as.numeric(lymp_auc),                   # drug vector             surv.time = as.numeric(lymp_expr[gene,]),       # gene vector             surv.event = rep(1,length(lymp_expr[gene,])),                outx = TRUE, method=\"noether\", na.rm = TRUE           )      # extract summary statistics   gene_result <- data.frame(gene, drug,                              ci = ci$c.index,                             pvalue = ci$p.value,                             se = ci$se,                             upper = ci$upper,                             lower = ci$lower)      # merge with results dataframe   results <- rbind(results, gene_result) }  # filtering and multiple test correction results <- results[complete.cases(results$pvalue),] results$FDR <- p.adjust(results$pvalue, method = \"BH\", n = length(results$pvalue))  results |> head() #>              gene      drug        ci     pvalue         se     upper     lower #> 1 ENSG00000181019 lapatinib 0.5497723 0.30681314 0.04870411 0.6452306 0.4543140 #> 2 ENSG00000157764 lapatinib 0.5191932 0.72503712 0.05456734 0.6261432 0.4122432 #> 3 ENSG00000000003 lapatinib 0.4528302 0.38826533 0.05467268 0.5599867 0.3456737 #> 4 ENSG00000000005 lapatinib 0.4547820 0.37310423 0.05076826 0.5542860 0.3552781 #> 5 ENSG00000000419 lapatinib 0.4925179 0.86910085 0.04540095 0.5815021 0.4035337 #> 6 ENSG00000000457 lapatinib 0.6005205 0.06179093 0.05381779 0.7060014 0.4950396 #>         FDR #> 1 0.8522587 #> 2 0.9062964 #> 3 0.8688491 #> 4 0.8688491 #> 5 0.9516488 #> 6 0.7079522 compute_CI <- function(expr, drug_vector, drug) {         # create data frame to hold results   results <- as.data.frame(matrix(data = NA, nrow = 0, ncol = 7))   colnames(results) <- c(\"gene\", \"drug\", \"ci\", \"pvalue\", \"se\", \"upper\", \"lower\")      # get the number of genes (features)   num_genes <- nrow(expr)      # loop through every gene to compute concordance index to drug responses   for (gene in rownames(expr)) {          # compute concordance index     ci <- survcomp::concordance.index(               as.numeric(drug_vector),                   # drug vector               surv.time = as.numeric(expr[gene,]),       # gene vector               surv.event = rep(1,length(expr[gene,])),                  outx = TRUE, method=\"noether\", na.rm = TRUE             )          # extract summary statistics     gene_result <- data.frame(gene, drug,                                ci = ci$c.index,                               pvalue = ci$p.value,                               se = ci$se,                               upper = ci$upper,                               lower = ci$lower)          # merge with results dataframe     results <- rbind(results, gene_result)   }      # filtering and multiple test correction   results <- results[complete.cases(results$pvalue),]   results$FDR <- p.adjust(results$pvalue, method = \"BH\", n = length(results$pvalue))   results$FDRsig <- ifelse(results$FDR < 0.05, 'FDR Sig', 'Not FDR Sig')      # output results   return(results) }  # use this function on both our lymp and lung data lymp_results <- compute_CI(expr = lymp_expr, drug_vector = lymp_auc, drug = drug) lung_results <- compute_CI(expr = lung_expr, drug_vector = lung_auc, drug = drug)  lymp_results |> head() #>              gene      drug        ci     pvalue         se     upper     lower #> 1 ENSG00000181019 lapatinib 0.5497723 0.30681314 0.04870411 0.6452306 0.4543140 #> 2 ENSG00000157764 lapatinib 0.5191932 0.72503712 0.05456734 0.6261432 0.4122432 #> 3 ENSG00000000003 lapatinib 0.4528302 0.38826533 0.05467268 0.5599867 0.3456737 #> 4 ENSG00000000005 lapatinib 0.4547820 0.37310423 0.05076826 0.5542860 0.3552781 #> 5 ENSG00000000419 lapatinib 0.4925179 0.86910085 0.04540095 0.5815021 0.4035337 #> 6 ENSG00000000457 lapatinib 0.6005205 0.06179093 0.05381779 0.7060014 0.4950396 #>         FDR      FDRsig #> 1 0.8522587 Not FDR Sig #> 2 0.9062964 Not FDR Sig #> 3 0.8688491 Not FDR Sig #> 4 0.8688491 Not FDR Sig #> 5 0.9516488 Not FDR Sig #> 6 0.7079522 Not FDR Sig lymp_results <- lymp_results[order(lymp_results$ci),] lung_results <- lung_results[order(lung_results$ci),]  lymp_results |> head() #>               gene      drug        ci     pvalue         se     upper #> 40 ENSG00000003400 lapatinib 0.4014314 0.07602913 0.05555649 0.5103201 #> 14 ENSG00000001461 lapatinib 0.4098894 0.08110842 0.05166032 0.5111418 #> 10 ENSG00000001036 lapatinib 0.4131425 0.10091227 0.05294747 0.5169176 #> 35 ENSG00000003096 lapatinib 0.4183474 0.11327235 0.05155958 0.5194024 #> 46 ENSG00000003989 lapatinib 0.4255042 0.14509404 0.05112672 0.5257108 #> 25 ENSG00000002586 lapatinib 0.4294079 0.17377225 0.05189897 0.5311281 #>        lower       FDR      FDRsig #> 40 0.2925426 0.7079522 Not FDR Sig #> 14 0.3086370 0.7079522 Not FDR Sig #> 10 0.3093674 0.7079522 Not FDR Sig #> 35 0.3172925 0.7079522 Not FDR Sig #> 46 0.3252977 0.7254702 Not FDR Sig #> 25 0.3276878 0.7898739 Not FDR Sig # create palette pal <- c('FDR Sig' = \"#B1D3A3\", 'Not FDR Sig' = \"gray\")  # function to plot waterfall plots plot_waterfall <- function(ci_results, tissue) {      # minor formating for plotting   ci_results$rank <- 1:nrow(ci_results)   ci_results$rank <- as.factor(ci_results$rank)   ci_results$drug <- as.factor(ci_results$drug)      # create waterfall plot   ggplot(ci_results, aes(x = ci - 0.5, y = rank)) +     geom_col(aes(fill = FDRsig), color = \"black\") +      scale_x_continuous(limits = c(-0.5, 0.5), labels = function(x) x + 0.5) +     scale_y_discrete(breaks = ci_results$rank, labels = ci_results$gene) +      geom_vline(xintercept = 0) +     scale_fill_manual(\"FDR Significance\", values = pal) +      theme_classic() +      theme(axis.text.x = element_text(angle = 90, hjust = 1)) +      labs(y = \"Gene\", title = tissue, x = \"Concordance Index (CI)\") +     coord_flip() }  # call the function on our lymp and lung results p1 <- plot_waterfall(lymp_results, 'Haematopoietic & Lymphoid') p2 <- plot_waterfall(lung_results, 'Lung')  ggarrange(p1, p2, nrow = 2) lung_sig <- lung_results[lung_results$FDR < 0.05,] lung_sig #>               gene      drug        ci       pvalue         se     upper #> 3  ENSG00000000003 lapatinib 0.3532213 2.812853e-05 0.03504651 0.4219112 #> 26 ENSG00000002587 lapatinib 0.3789916 3.713691e-04 0.03399460 0.4456198 #> 9  ENSG00000000971 lapatinib 0.3837535 3.707483e-04 0.03265282 0.4477519 #> 31 ENSG00000002834 lapatinib 0.3882353 1.091398e-03 0.03422234 0.4553099 #> 40 ENSG00000003400 lapatinib 0.4028011 5.219215e-03 0.03479861 0.4710051 #> 48 ENSG00000004139 lapatinib 0.6196078 1.663106e-04 0.03176533 0.6818667 #>        lower         FDR  FDRsig #> 3  0.2845314 0.001406427 FDR Sig #> 26 0.3123634 0.004642114 FDR Sig #> 9  0.3197552 0.004642114 FDR Sig #> 31 0.3211607 0.010913980 FDR Sig #> 40 0.3345971 0.043493456 FDR Sig #> 48 0.5573489 0.004157765 FDR Sig"},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Module4.html","id":"interactive-exercise","dir":"Articles","previous_headings":"Lab 4 Overview","what":"Interactive Exercise","title":"Module 4: Pharmacogenomics for biomarker discovery - Advanced analysis","text":"Task1:: Compare fixed-effects random-effects models using effect sizes using new gene-drug pair. Examine variability across different two studies. Use ² Q-statistics assess heterogeneity. Task2: Perform subgroup analysis new tissue type.","code":"# perform meta analysis on GDSC and CCLE on a new gene-drug pair  # Once you have your meta.result, you can use the code below to examine the Q and I-squared statistics  #cat(\"Q Statistic:\", meta.result$Q, \"\\n\") #cat(\"I-squared Statistic:\", meta.result$I2, \"%\\n\") # do a tissue subtype analysis on a new tissue type, reporting any candidate biomarkers"},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/PGx_2024.html","id":"instructors-names-and-contact-information","dir":"Articles","previous_headings":"Workshop Overview","what":"Instructor(s) name(s) and contact information","title":"Pharmacogenomic Analysis of Drug Combination Experiments to Identify Biomarkers of Response or Resistance","text":"Jermiah J. Joseph jermiah.joseph@uhn.ca","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/PGx_2024.html","id":"workshop-description","dir":"Articles","previous_headings":"Workshop Overview","what":"Workshop Description","title":"Pharmacogenomic Analysis of Drug Combination Experiments to Identify Biomarkers of Response or Resistance","text":"workshop introduce users CoreGx PharmacoGx R packages, useful tools pharmacogenomic modelling discover biomarkers treatment response cancer model systems. PharmacoGx specifically focuses drug sensitivity experiments cancer cell lines, major focus workshop. Additional infrastructure lab includes ToxicoGx toxicogenomics healthy human cell-lines, RadioGx radiogenomics cancer cell-lines Xeva pharmacogenomics patient derived xenograph (PDX) murine models. Participants learn fundamentals using CoreGx PharmacoGx create PharmacoSet—integrative container storage, analysis visualization pharmacogenomic experiments. Particular focus placed newly developed support storing, analyzing visualizing drug combination sensitivity experiments correlating results therefrom multi-omic molecular profiles discover biomarkers drug sensitivity, resistance, synergy, antagonism.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/PGx_2024.html","id":"pre-requisites","dir":"Articles","previous_headings":"Workshop Overview > Workshop Description","what":"Pre-requisites","title":"Pharmacogenomic Analysis of Drug Combination Experiments to Identify Biomarkers of Response or Resistance","text":"Basic knowledge R syntax Knowledge interest pharmacogenomics Familiarity core Bioconductor classes SummarizedExperiment MultiAssayExperiment Curiosity experience data.table asset! Useful publications: Smirnov, P., Safikhani, Z., El-Hachem, N., Wang, D., , ., Olsen, C., Freeman, M., Selby, H., Gendoo, D. M. ., Grossmann, P., Beck, . H., Aerts, H. J. W. L., Lupien, M., Goldenberg, ., & Haibe-Kains, B. (2016). PharmacoGx: R package analysis large pharmacogenomic datasets. Bioinformatics (Oxford, England), 32(8), 1244–1246. https://doi.org/10.1093/bioinformatics/btv723 Tonekaboni, M., Ali, S., Soltan Ghoraie, L., Manem, V. S. K. & Haibe-Kains, B. Predictive approaches drug combination discovery cancer. Brief Bioinform 19, 263–276 (2018).","code":""},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/PGx_2024.html","id":"introduction-to-coregx-and-pharmacogx","dir":"Articles","previous_headings":"","what":"Introduction to CoreGx and PharmacoGx","title":"Pharmacogenomic Analysis of Drug Combination Experiments to Identify Biomarkers of Response or Resistance","text":"tutorial, titled Pharmacogenomic Analysis Drug Combination Experiments Identify Biomarkers Response Resistance, focuses using PharmacoGx R package correlate treatment response, measured viability cancer cell-lines vitro drug treatment, respective multi-omic profiles. CoreGx provides core infrastructure storing, analyzing, visualizing generic treatment response experiments. provides methods classes can inherited downstream packages, ToxicoGx RadioGx. hope CoreSet object generalized enough can reused developers specific treatment (stimuli) response use case.","code":""},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/PGx_2024.html","id":"package-nomenclature","dir":"Articles","previous_headings":"Introduction to CoreGx and PharmacoGx > CoreGx","what":"Package Nomenclature","title":"Pharmacogenomic Analysis of Drug Combination Experiments to Identify Biomarkers of Response or Resistance","text":"facilitate modularization GxSuite R packages, shifted nomenclature within CoreSet—therefore inheriting packages —general. end, made following changes: Previous reference cell (cell-line) become sample, allowing CoreSet used model systems Drug (radiation RadioGx) become treatment, allowing CoreSet treatment type (stimuli) agnostic Sensitivity become response (sensitivity slot becomes treatmentResponse) result changes, names common accessors updated. old accessors still remain functional ensure backwards compatibility least two Bioconductor releases. deprecation warning added old accessors informing users corresponding new function, per Bioconductor best practices.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/PGx_2024.html","id":"pharmacogx","dir":"Articles","previous_headings":"Introduction to CoreGx and PharmacoGx","what":"PharmacoGx","title":"Pharmacogenomic Analysis of Drug Combination Experiments to Identify Biomarkers of Response or Resistance","text":"PharmacoGx stores drug screening data together molecular profiling cell-lines object called PharmacoSet, PSet short. Previously, PharmacoSet class entirely defined PharmacoGx package. However, building RadioGx ToxicoGx packages, realized core data structures abstracted shared. , PharmacoSets now inherit CoreSet class defined package CoreGx, used share common datas structure method across suite package. primary use case PharmacoGx : Provide standardized highly curated container high-throughput screens cancer-cell lines Enable discovery biomarkers treatment response resistance Allow comparison validation across large published pharmacogneomic datasets","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/PGx_2024.html","id":"overview-of-data-structures","dir":"Articles","previous_headings":"","what":"Overview of Data Structures","title":"Pharmacogenomic Analysis of Drug Combination Experiments to Identify Biomarkers of Response or Resistance","text":"GxSuite packages make use various Bioconductor classes storing molecular profile data.","code":""},{"path":[]},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/PGx_2024.html","id":"cell-lines-samples","dir":"Articles","previous_headings":"Example Experiment","what":"Cell Lines (samples)","title":"Pharmacogenomic Analysis of Drug Combination Experiments to Identify Biomarkers of Response or Resistance","text":"following cell lines used study: Cell Line (CLC-123): breast cancer cell line. Cell Line B (CLC-456): lung cancer cell line. Cell Line C (CLC-789): colon cancer cell line. Cell Line D (CLC-101): melanoma cell line. Cell Line E (CLC-202): pancreatic cancer cell line.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/PGx_2024.html","id":"drugs-treatments","dir":"Articles","previous_headings":"Example Experiment","what":"Drugs (treatments)","title":"Pharmacogenomic Analysis of Drug Combination Experiments to Identify Biomarkers of Response or Resistance","text":"following drugs tested cell lines: Drug X (Toxo-1): novel chemotherapy drug targets fast-dividing cancer cells. Drug Y (Inhi-2): targeted therapy designed block protein commonly overactive certain cancers. Drug Z (Syner-3): combination therapy enhances effectiveness Drug X used together.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/PGx_2024.html","id":"profiles-of-the-samples-molecularprofiles","dir":"Articles","previous_headings":"Example Experiment","what":"Profiles of the samples (molecularProfiles)","title":"Pharmacogenomic Analysis of Drug Combination Experiments to Identify Biomarkers of Response or Resistance","text":"managed obtain following molecular profiles cell lines: RNA Expression (rnaseq) DNA Methylation (methylation) Mutations (mutation) Copy Number Variation (cnv)","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/PGx_2024.html","id":"treatment-responses-treatmentresponse","dir":"Articles","previous_headings":"Example Experiment","what":"Treatment Responses (treatmentResponse)","title":"Pharmacogenomic Analysis of Drug Combination Experiments to Identify Biomarkers of Response or Resistance","text":"sample, treatments tested following doses: 1 µM 10 µM 100 µM 1000 µM","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Workshop_Outline.html","id":"course-description","dir":"Articles","previous_headings":"","what":"Course Description","title":"Workshop Outline and Objectives","text":"course explores evolving field personalized cancer treatment, focusing tailoring treatment strategies patients based unique molecular profiles. Participants gain comprehensive understanding field pharmacogenomics guided workflow covering basic advanced biomarker analysis. primary emphasis analysis cancer biomarkers; however, principles methodologies covered context transferable applicable disease areas. course designed provide sufficient context beginners, building basics tools methods data analysis. hands-practical tutorials session provide participants practical insights data well tools perform biomarker analysis . end introductory course, participants equipped knowledge skills understand data requirements perform biomarker analysis.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Workshop_Outline.html","id":"course-objectives","dir":"Articles","previous_headings":"","what":"Course Objectives","title":"Workshop Outline and Objectives","text":"Participants gain practical experience skills able : Extract features biomarker discovery -omics data (RNA-Seq, methylation, mutations, proteomics, chromatin profiling, etc) Navigate pharmacogenomics datasets data preparation pharmacogenomic analysis Identify univariable biomarkers RNA-Seq data Perform meta-analysis identify robust biomarkers Visualize summarize output pharmacogenomic biomarker analysis","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Workshop_Outline.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Workshop Outline and Objectives","text":"Participants comfortable writing reading basic R. require laptop computer. Minimum requirements: 1024×768 screen resolution, 1.5GHz CPU, 4GB RAM, 20GB free disk space, recent versions Windows, Mac OS X Linux (computers purchased past 3-4 years likely meet requirements). workshop requires participants complete pre-workshop tasks readings includes installing setting R environment.","code":""},{"path":[]},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Workshop_Outline.html","id":"lecture","dir":"Articles","previous_headings":"Course Outline > Module 1: Introduction to Pharmacogenomics and Biomarker Discovery","what":"Lecture:","title":"Workshop Outline and Objectives","text":"Overview personalized cancer treatment role biomarker discovery “pharmacogenomics”; different pharmacogenetics? Challenges biomarker discovery Conventional markers: oncogenic mutations, gene expression, proteomics Exciting new fields: mutational signatures, synthetic lethality, chromatin accessibility markers like radiomic features Sequencing technologies: RNA-Seq, Whole Genome Sequencing (WGS), Whole Exome Sequencing (WES), etc. Solid tumor vs liquid biopsy","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Workshop_Outline.html","id":"practical-getting-to-know-multi-omics-data","dir":"Articles","previous_headings":"Course Outline > Module 1: Introduction to Pharmacogenomics and Biomarker Discovery","what":"Practical – Getting to know multi-omics data","title":"Workshop Outline and Objectives","text":"TAs: Julia Nguyen, Jermiah Joseph Loading expression matrices various -omics data (RNA-Seq, methylation, mutations, proteomics, chromatin profiling) Exploring feature extraction techniques define biomarkers (epi)genomic data","code":""},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Workshop_Outline.html","id":"lecture-1","dir":"Articles","previous_headings":"Course Outline > Module 2: Data Preparation for Pharmacogenomic Analysis","what":"Lecture:","title":"Workshop Outline and Objectives","text":"Cell lines, patient-derived xenografts (PDX), organoids, etc. Importance clinical validation biomarker discovery typical pharmacogenomic dataset?: dataset overview using PharmacoGx Quality control: batch effects, outliers, missing values, common sources variation","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Workshop_Outline.html","id":"practical-hands-on-with-pharmacogenomics-data","dir":"Articles","previous_headings":"Course Outline > Module 2: Data Preparation for Pharmacogenomic Analysis","what":"Practical: Hands-on with pharmacogenomics data","title":"Workshop Outline and Objectives","text":"Loading PharmacoSet R using PharmacoGx ORCESTRA, understanding data structure, accessing features, preparing metadata Plot batch effects using PCA run correction method (SVA) Filter outliers missing values","code":""},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Workshop_Outline.html","id":"lecture-2","dir":"Articles","previous_headings":"Course Outline > Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","what":"Lecture:","title":"Workshop Outline and Objectives","text":"Statistical methods drug response associations Computing drug response associations using Concordance Index Pearson’s correlation Introduction univariable vs. multivariable analysis biomarkers","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Workshop_Outline.html","id":"practical-statistical-analysis","dir":"Articles","previous_headings":"Course Outline > Module 3: Pharmacogenomics for biomarker discovery – Basic analysis","what":"Practical: Statistical Analysis","title":"Workshop Outline and Objectives","text":"Basic functionalities PharmacoGx Case study – Univariable analysis drug response using PharmacoGx Plotting associations interpretation results R","code":""},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Workshop_Outline.html","id":"lecture-3","dir":"Articles","previous_headings":"Course Outline > Module 4: Pharmacogenomics for biomarker discovery – Advanced analysis","what":"Lecture:","title":"Workshop Outline and Objectives","text":"Introduction “meta-analysis” context inter-study investigations Visualization interpretation using forest plots interpret meta-analysis statistics Identifying tissue-specific biomarkers example cancer subtypes factors consider (tumor grade, biological sex, etc)","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/articles/Workshop_Outline.html","id":"practical-statistical-analysis-part-2","dir":"Articles","previous_headings":"Course Outline > Module 4: Pharmacogenomics for biomarker discovery – Advanced analysis","what":"Practical: Statistical Analysis – Part 2","title":"Workshop Outline and Objectives","text":"Run meta-analysis ~4 small PharmacoSets biomarker interest pan-cancer cancer-specific data Generate interpret forest plots statistics","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jermiah Joseph. Author, maintainer. Julia Nguyen. Author. Nikta Feizi. Author. Canadian Bioinformatics Workshop,Bioinformatics.ca. Funder.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Joseph J, Nguyen J, Feizi N (2024). CBWWorkshop2024: CBW Workshop 2024: Pharmacogenomics Data Analysis. R package version 0.0.0.9027, https://bhklab.github.io/CBWWorkshop2024/.","code":"@Manual{,   title = {CBWWorkshop2024: CBW Workshop 2024: Pharmacogenomics Data Analysis},   author = {Jermiah Joseph and Julia Nguyen and Nikta Feizi},   year = {2024},   note = {R package version 0.0.0.9027},   url = {https://bhklab.github.io/CBWWorkshop2024/}, }"},{"path":"https://bhklab.github.io/CBWWorkshop2024/index.html","id":"pharmacogenomics-cbw-2024","dir":"","previous_headings":"","what":"pgxCBW2024Workshop","title":"pgxCBW2024Workshop","text":"Canadian Bioinformatics Workshops (CBW) series hands-training sessions provide bioinformatics training biologists, researchers, professionals. workshop designed provide theoretical knowledge practical experience, ensuring participants leave skills tools apply bioinformatics techniques research.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/index.html","id":"overview-pharmacogenomics-data-analysis","dir":"","previous_headings":"","what":"Overview: Pharmacogenomics Data Analysis","title":"pgxCBW2024Workshop","text":"workshop delves rapidly advancing field personalized cancer treatment, emphasizing treatments can tailored individual patients based unique molecular profiles. Participants gain foundational understanding pharmacogenomics, focusing specifically cancer biomarker analysis, guided comprehensive workflow basic concepts advanced biomarker discovery techniques. Participants introduced PharmacoGx package use analyze pharmacogenomics data. hands-tutorials practical exercises, participants learn extract, analyze, visualize data identify robust cancer biomarkers, transferable skills applicable areas disease research. Note: workshop accompanied 4 presentations. Distribution: workshop developed R package. package contains vignettes, data correspond workshop modules. workshop also published CBW Workshop Website visiting published workshop, can see following modules: Module 1 Lab: Getting know multi-omics data (Julia, Nikta, Jermiah) Module 2 Lab: Hands-pharmacogenomics data (Jermiah, Almas) Module 3: Pharmacogenomics biomarker discovery - Basic analysis (Nikta, Julia) Module 4: Pharmacogenomics biomarker discovery - Advanced analysis (Nikta, Julia) view vignettes, click articles tab package landing page.","code":""},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/index.html","id":"installing-from-github","dir":"","previous_headings":"Setup for Workshop Participants","what":"Installing from GitHub","title":"pgxCBW2024Workshop","text":"Run install package dependencies. [!NOTE] may need install pak package first. pak “Fresh Approach R Package Installation”. can install running:","code":"pak::pkg_install(\"bhklab/CBWWorkshop2024\", dependencies=TRUE) install.packages(\"pak\")"},{"path":[]},{"path":"https://bhklab.github.io/CBWWorkshop2024/index.html","id":"adding-to-the-repo","dir":"","previous_headings":"Contributing","what":"Adding to the repo","title":"pgxCBW2024Workshop","text":"Installing developer tools haven’t worked R packages , packages make life lot easier. can install running following command R: Clone repository create new branch Add changes Example 1: add author package Example 2: Add new vignette Commit push changes Create pull request Visit github repo create pull request https://github.com/bhklab/CBWWorkshop2024","code":"pkgs <- c(\"devtools\", \"usethis\", \"roxygen2\", \"testthat\", \"biocthis\") pak::pkg_install(pkgs) git clone https://github.com/bhklab/CBWWorkshop2024.git cd CBWWorkshop2024 git checkout -b <your-branch-name> usethis::use_author(\"firstname\", \"secondname\", role=\"aut\") # your name should now appear in the description file # Make a new Vignette biocthis::use_bioc_vignette(\"Module3\", \"Module 3: TITLE\")  # Your vignette should be in the vignettes folder # Make a bunch of changes, atleast delete all the auto-generated # and add your own content git add . git commit -m \"DESCRIPTIVE MESSAGE\" git push"},{"path":"https://bhklab.github.io/CBWWorkshop2024/index.html","id":"merging-changes-from-the-main-branch","dir":"","previous_headings":"Contributing","what":"Merging changes from the main branch","title":"pgxCBW2024Workshop","text":"main branch updated, can merge changes branch running following commands: , merge changes branch conflicts, need resolve can merge changes. See helpful guide resolving conflicts:","code":"git fetch origin git checkout main git pull git checkout <your-branch-name> git merge origin/main"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/CCLE_chromatin.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame containing global chromatin profiling of histone marks for the Cancer Cell Line Encyclopedia (CCLE) dataset. — CCLE_chromatin","title":"A data.frame containing global chromatin profiling of histone marks for the Cancer Cell Line Encyclopedia (CCLE) dataset. — CCLE_chromatin","text":"subset CCLE histone modification dataset Ghandi et al. 2019 includes enrichment histone marks across different genomic regions.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/CCLE_chromatin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame containing global chromatin profiling of histone marks for the Cancer Cell Line Encyclopedia (CCLE) dataset. — CCLE_chromatin","text":"","code":"data(CCLE_chromatin)"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/CCLE_chromatin.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame containing global chromatin profiling of histone marks for the Cancer Cell Line Encyclopedia (CCLE) dataset. — CCLE_chromatin","text":"data.frame object","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/CCLE_chromatin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A data.frame containing global chromatin profiling of histone marks for the Cancer Cell Line Encyclopedia (CCLE) dataset. — CCLE_chromatin","text":"Ghandi, M., Huang, F. W., Jané-Valbuena, J., Kryukov, G. V., Lo, C. C., McDonald, E. R., Barretina, J., Gelfand, E. T., Bielski, C. M., Li, H., Hu, K., Andreev-Drakhlin, . Y., Kim, J., Hess, J. M., Haas, B. J., Aguet, F., Weir, B. ., Rothberg, M. V., Paolella, B. R., … Golub, T. R. (2019). Next-generation characterization Cancer Cell Line Encyclopedia. Nature, 569(7757), 503–508. https://doi.org/10.1038/s41586-019-1186-3","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/CCLE_metabolomics.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame containing metabolite expression data for the Cancer Cell Line Encyclopedia (CCLE) dataset. — CCLE_metabolomics","title":"A data.frame containing metabolite expression data for the Cancer Cell Line Encyclopedia (CCLE) dataset. — CCLE_metabolomics","text":"subset CCLE metabolomics dataset Ghandi et al. 2019 includes measurements metabolite expression levels random selection cell lines.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/CCLE_metabolomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame containing metabolite expression data for the Cancer Cell Line Encyclopedia (CCLE) dataset. — CCLE_metabolomics","text":"","code":"data(CCLE_metabolomics)"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/CCLE_metabolomics.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame containing metabolite expression data for the Cancer Cell Line Encyclopedia (CCLE) dataset. — CCLE_metabolomics","text":"data.frame object","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/CCLE_metabolomics.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A data.frame containing metabolite expression data for the Cancer Cell Line Encyclopedia (CCLE) dataset. — CCLE_metabolomics","text":"Ghandi, M., Huang, F. W., Jané-Valbuena, J., Kryukov, G. V., Lo, C. C., McDonald, E. R., Barretina, J., Gelfand, E. T., Bielski, C. M., Li, H., Hu, K., Andreev-Drakhlin, . Y., Kim, J., Hess, J. M., Haas, B. J., Aguet, F., Weir, B. ., Rothberg, M. V., Paolella, B. R., … Golub, T. R. (2019). Next-generation characterization Cancer Cell Line Encyclopedia. Nature, 569(7757), 503–508. https://doi.org/10.1038/s41586-019-1186-3","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/CCLE_model_list.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame containing metadata for cell lines used in the Cancer Cell Line Encyclopedia (CCLE) project. — CCLE_model_list","title":"A data.frame containing metadata for cell lines used in the Cancer Cell Line Encyclopedia (CCLE) project. — CCLE_model_list","text":"annotation file CCLE dataset Ghandi et al. 2019 containing list cell line models used, including metadata cell line.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/CCLE_model_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame containing metadata for cell lines used in the Cancer Cell Line Encyclopedia (CCLE) project. — CCLE_model_list","text":"","code":"data(CCLE_model_list)"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/CCLE_model_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame containing metadata for cell lines used in the Cancer Cell Line Encyclopedia (CCLE) project. — CCLE_model_list","text":"data.frame object","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/CCLE_model_list.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A data.frame containing metadata for cell lines used in the Cancer Cell Line Encyclopedia (CCLE) project. — CCLE_model_list","text":"Ghandi, M., Huang, F. W., Jané-Valbuena, J., Kryukov, G. V., Lo, C. C., McDonald, E. R., Barretina, J., Gelfand, E. T., Bielski, C. M., Li, H., Hu, K., Andreev-Drakhlin, . Y., Kim, J., Hess, J. M., Haas, B. J., Aguet, F., Weir, B. ., Rothberg, M. V., Paolella, B. R., … Golub, T. R. (2019). Next-generation characterization Cancer Cell Line Encyclopedia. Nature, 569(7757), 503–508. https://doi.org/10.1038/s41586-019-1186-3","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/CCLE_rrpa.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame containing protein expression data for the Cancer Cell Line Encyclopedia (CCLE) dataset. — CCLE_rrpa","title":"A data.frame containing protein expression data for the Cancer Cell Line Encyclopedia (CCLE) dataset. — CCLE_rrpa","text":"subset CCLE RPPA dataset Ghandi et al. 2019 includes measurements protein expression levels random selection cell lines.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/CCLE_rrpa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame containing protein expression data for the Cancer Cell Line Encyclopedia (CCLE) dataset. — CCLE_rrpa","text":"","code":"data(CCLE_rrpa)"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/CCLE_rrpa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame containing protein expression data for the Cancer Cell Line Encyclopedia (CCLE) dataset. — CCLE_rrpa","text":"data.frame object","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/CCLE_rrpa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A data.frame containing protein expression data for the Cancer Cell Line Encyclopedia (CCLE) dataset. — CCLE_rrpa","text":"Ghandi, M., Huang, F. W., Jané-Valbuena, J., Kryukov, G. V., Lo, C. C., McDonald, E. R., Barretina, J., Gelfand, E. T., Bielski, C. M., Li, H., Hu, K., Andreev-Drakhlin, . Y., Kim, J., Hess, J. M., Haas, B. J., Aguet, F., Weir, B. ., Rothberg, M. V., Paolella, B. R., … Golub, T. R. (2019). Next-generation characterization Cancer Cell Line Encyclopedia. Nature, 569(7757), 503–508. https://doi.org/10.1038/s41586-019-1186-3","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_drivers.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame containing a subset of cell lines and driver mutations from the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_drivers","title":"A data.frame containing a subset of cell lines and driver mutations from the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_drivers","text":"subset GDSC driver mutations dataset Iorio et al. 2016 containing cancer driver mutation status random selection cell lines.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_drivers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame containing a subset of cell lines and driver mutations from the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_drivers","text":"","code":"data(GDSC_drivers)"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_drivers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame containing a subset of cell lines and driver mutations from the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_drivers","text":"data.frame object","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_drivers.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A data.frame containing a subset of cell lines and driver mutations from the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_drivers","text":"Yang, W., Soares, J., Greninger, P., Edelman, E. J., Lightfoot, H., Forbes, S., Bindal, N., Beare, D., Smith, J. ., Thompson, . R., Ramaswamy, S., & Futreal, P. . (2013). Genomics Drug Sensitivity Cancer (GDSC): resource therapeutic biomarker discovery cancer cells. Nucleic Acids Research, 41(D1), D955–D961. https://doi.org/10.1093/nar/gks1111 Iorio, F., Knijnenburg, T. ., Vis, D. J., Bignell, G. R., Menden, M. P., Schubert, M., Aben, N., Gonçalves, E., Barthorpe, S., Lightfoot, H., Cokelaer, T., Greninger, P., van Dyk, E., Chang, H., de Silva, H., Heyn, H., Deng, X., Egan, R. K., Liu, Q., Mironenko, T., … Garnett, M. J. (2016). Landscape Pharmacogenomic Interactions Cancer. Cell, 166(3), 740–754. https://doi.org/10.1016/j.cell.2016.06.017 Garnett, M. J., Edelman, E. J., Heidorn, S. J., Greenman, C. D., Dastur, ., Lau, K. W., Greninger, P., Thompson, . R., Luo, X., Soares, J., Liu, Q., Iorio, F., Surdez, D., Chen, L., Milano, R. J., Bignell, G. R., Tam, . T., Davies, H., Stevenson, J. ., … Benes, C. H. (2012). Systematic identification genomic markers drug sensitivity cancer cells. Nature, 483(7391), 570–575. https://doi.org/10.1038/nature11005","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_drug_response.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame containing drug response data for the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_drug_response","title":"A data.frame containing drug response data for the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_drug_response","text":"subset GDSC drug response dataset Iorio et al. 2016 containing response data selection drugs different cell lines.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_drug_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame containing drug response data for the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_drug_response","text":"","code":"data(GDSC_drug_response)"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_drug_response.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame containing drug response data for the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_drug_response","text":"data.frame object","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_drug_response.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A data.frame containing drug response data for the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_drug_response","text":"Yang, W., Soares, J., Greninger, P., Edelman, E. J., Lightfoot, H., Forbes, S., Bindal, N., Beare, D., Smith, J. ., Thompson, . R., Ramaswamy, S., & Futreal, P. . (2013). Genomics Drug Sensitivity Cancer (GDSC): resource therapeutic biomarker discovery cancer cells. Nucleic Acids Research, 41(D1), D955–D961. https://doi.org/10.1093/nar/gks1111 Iorio, F., Knijnenburg, T. ., Vis, D. J., Bignell, G. R., Menden, M. P., Schubert, M., Aben, N., Gonçalves, E., Barthorpe, S., Lightfoot, H., Cokelaer, T., Greninger, P., van Dyk, E., Chang, H., de Silva, H., Heyn, H., Deng, X., Egan, R. K., Liu, Q., Mironenko, T., … Garnett, M. J. (2016). Landscape Pharmacogenomic Interactions Cancer. Cell, 166(3), 740–754. https://doi.org/10.1016/j.cell.2016.06.017 Garnett, M. J., Edelman, E. J., Heidorn, S. J., Greenman, C. D., Dastur, ., Lau, K. W., Greninger, P., Thompson, . R., Luo, X., Soares, J., Liu, Q., Iorio, F., Surdez, D., Chen, L., Milano, R. J., Bignell, G. R., Tam, . T., Davies, H., Stevenson, J. ., … Benes, C. H. (2012). Systematic identification genomic markers drug sensitivity cancer cells. Nature, 483(7391), 570–575. https://doi.org/10.1038/nature11005","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_gene_identifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame containing the mapping of gene names used in the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_gene_identifiers","title":"A data.frame containing the mapping of gene names used in the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_gene_identifiers","text":"annotation file GDSC dataset Iorio et al. 2016 containing mapping gene names.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_gene_identifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame containing the mapping of gene names used in the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_gene_identifiers","text":"","code":"data(GDSC_gene_identifiers)"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_gene_identifiers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame containing the mapping of gene names used in the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_gene_identifiers","text":"data.frame object","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_gene_identifiers.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A data.frame containing the mapping of gene names used in the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_gene_identifiers","text":"Yang, W., Soares, J., Greninger, P., Edelman, E. J., Lightfoot, H., Forbes, S., Bindal, N., Beare, D., Smith, J. ., Thompson, . R., Ramaswamy, S., & Futreal, P. . (2013). Genomics Drug Sensitivity Cancer (GDSC): resource therapeutic biomarker discovery cancer cells. Nucleic Acids Research, 41(D1), D955–D961. https://doi.org/10.1093/nar/gks1111 Iorio, F., Knijnenburg, T. ., Vis, D. J., Bignell, G. R., Menden, M. P., Schubert, M., Aben, N., Gonçalves, E., Barthorpe, S., Lightfoot, H., Cokelaer, T., Greninger, P., van Dyk, E., Chang, H., de Silva, H., Heyn, H., Deng, X., Egan, R. K., Liu, Q., Mironenko, T., … Garnett, M. J. (2016). Landscape Pharmacogenomic Interactions Cancer. Cell, 166(3), 740–754. https://doi.org/10.1016/j.cell.2016.06.017 Garnett, M. J., Edelman, E. J., Heidorn, S. J., Greenman, C. D., Dastur, ., Lau, K. W., Greninger, P., Thompson, . R., Luo, X., Soares, J., Liu, Q., Iorio, F., Surdez, D., Chen, L., Milano, R. J., Bignell, G. R., Tam, . T., Davies, H., Stevenson, J. ., … Benes, C. H. (2012). Systematic identification genomic markers drug sensitivity cancer cells. Nature, 483(7391), 570–575. https://doi.org/10.1038/nature11005","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_methylation.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame containing methylation beta values for cell lines from the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_methylation","title":"A data.frame containing methylation beta values for cell lines from the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_methylation","text":"subset GDSC methylation dataset Iorio et al. 2016 containing methylation beta values random selection cell lines.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_methylation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame containing methylation beta values for cell lines from the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_methylation","text":"","code":"data(GDSC_methylation)"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_methylation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame containing methylation beta values for cell lines from the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_methylation","text":"data.frame object","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_methylation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A data.frame containing methylation beta values for cell lines from the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_methylation","text":"Yang, W., Soares, J., Greninger, P., Edelman, E. J., Lightfoot, H., Forbes, S., Bindal, N., Beare, D., Smith, J. ., Thompson, . R., Ramaswamy, S., & Futreal, P. . (2013). Genomics Drug Sensitivity Cancer (GDSC): resource therapeutic biomarker discovery cancer cells. Nucleic Acids Research, 41(D1), D955–D961. https://doi.org/10.1093/nar/gks1111 Iorio, F., Knijnenburg, T. ., Vis, D. J., Bignell, G. R., Menden, M. P., Schubert, M., Aben, N., Gonçalves, E., Barthorpe, S., Lightfoot, H., Cokelaer, T., Greninger, P., van Dyk, E., Chang, H., de Silva, H., Heyn, H., Deng, X., Egan, R. K., Liu, Q., Mironenko, T., … Garnett, M. J. (2016). Landscape Pharmacogenomic Interactions Cancer. Cell, 166(3), 740–754. https://doi.org/10.1016/j.cell.2016.06.017 Garnett, M. J., Edelman, E. J., Heidorn, S. J., Greenman, C. D., Dastur, ., Lau, K. W., Greninger, P., Thompson, . R., Luo, X., Soares, J., Liu, Q., Iorio, F., Surdez, D., Chen, L., Milano, R. J., Bignell, G. R., Tam, . T., Davies, H., Stevenson, J. ., … Benes, C. H. (2012). Systematic identification genomic markers drug sensitivity cancer cells. Nature, 483(7391), 570–575. https://doi.org/10.1038/nature11005","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_methylation_model_list.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame containing cell line Sentrix array metadata for the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_methylation_model_list","title":"A data.frame containing cell line Sentrix array metadata for the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_methylation_model_list","text":"annotation file GDSC methylation dataset Iorio et al. 2016 containing Sentrix array platform metadata cell lines methylation profiling.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_methylation_model_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame containing cell line Sentrix array metadata for the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_methylation_model_list","text":"","code":"data(GDSC_methylation_model_list)"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_methylation_model_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame containing cell line Sentrix array metadata for the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_methylation_model_list","text":"data.frame object","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_methylation_model_list.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A data.frame containing cell line Sentrix array metadata for the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_methylation_model_list","text":"Yang, W., Soares, J., Greninger, P., Edelman, E. J., Lightfoot, H., Forbes, S., Bindal, N., Beare, D., Smith, J. ., Thompson, . R., Ramaswamy, S., & Futreal, P. . (2013). Genomics Drug Sensitivity Cancer (GDSC): resource therapeutic biomarker discovery cancer cells. Nucleic Acids Research, 41(D1), D955–D961. https://doi.org/10.1093/nar/gks1111 Iorio, F., Knijnenburg, T. ., Vis, D. J., Bignell, G. R., Menden, M. P., Schubert, M., Aben, N., Gonçalves, E., Barthorpe, S., Lightfoot, H., Cokelaer, T., Greninger, P., van Dyk, E., Chang, H., de Silva, H., Heyn, H., Deng, X., Egan, R. K., Liu, Q., Mironenko, T., … Garnett, M. J. (2016). Landscape Pharmacogenomic Interactions Cancer. Cell, 166(3), 740–754. https://doi.org/10.1016/j.cell.2016.06.017 Garnett, M. J., Edelman, E. J., Heidorn, S. J., Greenman, C. D., Dastur, ., Lau, K. W., Greninger, P., Thompson, . R., Luo, X., Soares, J., Liu, Q., Iorio, F., Surdez, D., Chen, L., Milano, R. J., Bignell, G. R., Tam, . T., Davies, H., Stevenson, J. ., … Benes, C. H. (2012). Systematic identification genomic markers drug sensitivity cancer cells. Nature, 483(7391), 570–575. https://doi.org/10.1038/nature11005","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_model_list.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame containing metadata for cell lines used in the Genomics of Drug Sensitivity in Cancer (GDSC) project. — GDSC_model_list","title":"A data.frame containing metadata for cell lines used in the Genomics of Drug Sensitivity in Cancer (GDSC) project. — GDSC_model_list","text":"annotation file GDSC dataset Iorio et al. 2016 containing list cell line models used, including metadata cell line.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_model_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame containing metadata for cell lines used in the Genomics of Drug Sensitivity in Cancer (GDSC) project. — GDSC_model_list","text":"","code":"data(GDSC_model_list)"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_model_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame containing metadata for cell lines used in the Genomics of Drug Sensitivity in Cancer (GDSC) project. — GDSC_model_list","text":"data.frame object","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_model_list.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A data.frame containing metadata for cell lines used in the Genomics of Drug Sensitivity in Cancer (GDSC) project. — GDSC_model_list","text":"Yang, W., Soares, J., Greninger, P., Edelman, E. J., Lightfoot, H., Forbes, S., Bindal, N., Beare, D., Smith, J. ., Thompson, . R., Ramaswamy, S., & Futreal, P. . (2013). Genomics Drug Sensitivity Cancer (GDSC): resource therapeutic biomarker discovery cancer cells. Nucleic Acids Research, 41(D1), D955–D961. https://doi.org/10.1093/nar/gks1111 Iorio, F., Knijnenburg, T. ., Vis, D. J., Bignell, G. R., Menden, M. P., Schubert, M., Aben, N., Gonçalves, E., Barthorpe, S., Lightfoot, H., Cokelaer, T., Greninger, P., van Dyk, E., Chang, H., de Silva, H., Heyn, H., Deng, X., Egan, R. K., Liu, Q., Mironenko, T., … Garnett, M. J. (2016). Landscape Pharmacogenomic Interactions Cancer. Cell, 166(3), 740–754. https://doi.org/10.1016/j.cell.2016.06.017 Garnett, M. J., Edelman, E. J., Heidorn, S. J., Greenman, C. D., Dastur, ., Lau, K. W., Greninger, P., Thompson, . R., Luo, X., Soares, J., Liu, Q., Iorio, F., Surdez, D., Chen, L., Milano, R. J., Bignell, G. R., Tam, . T., Davies, H., Stevenson, J. ., … Benes, C. H. (2012). Systematic identification genomic markers drug sensitivity cancer cells. Nature, 483(7391), 570–575. https://doi.org/10.1038/nature11005","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_rnaseq.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame containing a subset of cell lines and RNA-seq data from the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_rnaseq","title":"A data.frame containing a subset of cell lines and RNA-seq data from the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_rnaseq","text":"subset GDSC RNA-seq data dataset Iorio et al. 2016 containing RNA-Seq expression values random selection cell lines.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_rnaseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame containing a subset of cell lines and RNA-seq data from the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_rnaseq","text":"","code":"data(GDSC_rnaseq)"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_rnaseq.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame containing a subset of cell lines and RNA-seq data from the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_rnaseq","text":"data.frame object","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/GDSC_rnaseq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A data.frame containing a subset of cell lines and RNA-seq data from the Genomics of Drug Sensitivity in Cancer (GDSC) dataset. — GDSC_rnaseq","text":"Yang, W., Soares, J., Greninger, P., Edelman, E. J., Lightfoot, H., Forbes, S., Bindal, N., Beare, D., Smith, J. ., Thompson, . R., Ramaswamy, S., & Futreal, P. . (2013). Genomics Drug Sensitivity Cancer (GDSC): resource therapeutic biomarker discovery cancer cells. Nucleic Acids Research, 41(D1), D955–D961. https://doi.org/10.1093/nar/gks1111 Iorio, F., Knijnenburg, T. ., Vis, D. J., Bignell, G. R., Menden, M. P., Schubert, M., Aben, N., Gonçalves, E., Barthorpe, S., Lightfoot, H., Cokelaer, T., Greninger, P., van Dyk, E., Chang, H., de Silva, H., Heyn, H., Deng, X., Egan, R. K., Liu, Q., Mironenko, T., … Garnett, M. J. (2016). Landscape Pharmacogenomic Interactions Cancer. Cell, 166(3), 740–754. https://doi.org/10.1016/j.cell.2016.06.017 Garnett, M. J., Edelman, E. J., Heidorn, S. J., Greenman, C. D., Dastur, ., Lau, K. W., Greninger, P., Thompson, . R., Luo, X., Soares, J., Liu, Q., Iorio, F., Surdez, D., Chen, L., Milano, R. J., Bignell, G. R., Tam, . T., Davies, H., Stevenson, J. ., … Benes, C. H. (2012). Systematic identification genomic markers drug sensitivity cancer cells. Nature, 483(7391), 570–575. https://doi.org/10.1038/nature11005","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI60_molecular_data.html","id":null,"dir":"Reference","previous_headings":"","what":"A MultiAssayExperiment containing RNA microarray, mircoRNA and RNA sequencing data from the NCI60, subset to cell-lines in NCI-ALMANAC — NCI60_molecular_data","title":"A MultiAssayExperiment containing RNA microarray, mircoRNA and RNA sequencing data from the NCI60, subset to cell-lines in NCI-ALMANAC — NCI60_molecular_data","text":"data precurated inclusion NCI60_2021 PharmacoSet, hosted www.ORCESTRA.ca downloadable PharmacoGx via downloadPSet function. data already subset contain cancer cell-lines also present NCI-ALMANAC dataset.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI60_molecular_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A MultiAssayExperiment containing RNA microarray, mircoRNA and RNA sequencing data from the NCI60, subset to cell-lines in NCI-ALMANAC — NCI60_molecular_data","text":"","code":"data(NCI60_molecular_data)  CBWWorkshop2024::NCI60_molecular_data"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI60_molecular_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A MultiAssayExperiment containing RNA microarray, mircoRNA and RNA sequencing data from the NCI60, subset to cell-lines in NCI-ALMANAC — NCI60_molecular_data","text":"MultiAssayExperiment object","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI60_molecular_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A MultiAssayExperiment containing RNA microarray, mircoRNA and RNA sequencing data from the NCI60, subset to cell-lines in NCI-ALMANAC — NCI60_molecular_data","text":"Shoemaker, R. H. (2006). NCI60 human tumour cell line anticancer drug screen. Nature Reviews Cancer, 6(10), 813–823. https://doi.org/10.1038/nrc1951 Holbeck, S. L., Camalier, R., Crowell, J. ., Govindharajulu, J. P., Hollingshead, M., Anderson, L. W., Polley, E., Rubinstein, L., Srivastava, ., Wilsker, D., Collins, J. M., & Doroshow, J. H. (2017). National Cancer Institute ALMANAC: Comprehensive Screening Resource Detection Anticancer Drug Pairs Enhanced Therapeutic Activity. Cancer Research, 77(13), 3564–3576. https://doi.org/10.1158/0008-5472.CAN-17-0489","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_TRE.html","id":null,"dir":"Reference","previous_headings":"","what":"A TreatmentResponseExperiment containing RNA microarray, mircoRNA and RNA sequencing data from the NCI60, subset to cell-lines in NCI-ALMANAC — NCI_ALMANAC_TRE","title":"A TreatmentResponseExperiment containing RNA microarray, mircoRNA and RNA sequencing data from the NCI60, subset to cell-lines in NCI-ALMANAC — NCI_ALMANAC_TRE","text":"data precurated inclusion NCI60_2021 PharmacoSet, hosted www.ORCESTRA.ca downloadable PharmacoGx via downloadPSet function. data already subset contain cancer cell-lines also present NCI-ALMANAC dataset.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_TRE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A TreatmentResponseExperiment containing RNA microarray, mircoRNA and RNA sequencing data from the NCI60, subset to cell-lines in NCI-ALMANAC — NCI_ALMANAC_TRE","text":"","code":"data(NCI_ALMANAC_TRE)  CBWWorkshop2024::NCI_ALMANAC_TRE  NCI_ALMANAC_TRE"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_TRE.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A TreatmentResponseExperiment containing RNA microarray, mircoRNA and RNA sequencing data from the NCI60, subset to cell-lines in NCI-ALMANAC — NCI_ALMANAC_TRE","text":"TreatmentResponseExperiment object object class TreatmentResponseExperiment 6561 rows 62 columns.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_TRE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A TreatmentResponseExperiment containing RNA microarray, mircoRNA and RNA sequencing data from the NCI60, subset to cell-lines in NCI-ALMANAC — NCI_ALMANAC_TRE","text":"Shoemaker, R. H. (2006). NCI60 human tumour cell line anticancer drug screen. Nature Reviews Cancer, 6(10), 813–823. https://doi.org/10.1038/nrc1951 Holbeck, S. L., Camalier, R., Crowell, J. ., Govindharajulu, J. P., Hollingshead, M., Anderson, L. W., Polley, E., Rubinstein, L., Srivastava, ., Wilsker, D., Collins, J. M., & Doroshow, J. H. (2017). National Cancer Institute ALMANAC: Comprehensive Screening Resource Detection Anticancer Drug Pairs Enhanced Therapeutic Activity. Cancer Research, 77(13), 3564–3576. https://doi.org/10.1158/0008-5472.CAN-17-0489","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_pset.html","id":null,"dir":"Reference","previous_headings":"","what":"The final PharmacoSet object containing the multiple parts of the NCI-ALMANAC dataset. — NCI_ALMANAC_pset","title":"The final PharmacoSet object containing the multiple parts of the NCI-ALMANAC dataset. — NCI_ALMANAC_pset","text":"final PharmacoSet object containing multiple parts NCI-ALMANAC dataset.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_pset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The final PharmacoSet object containing the multiple parts of the NCI-ALMANAC dataset. — NCI_ALMANAC_pset","text":"","code":"data(NCI_ALMANAC_pset)  CBWWorkshop2024::NCI_ALMANAC_pset"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_pset.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The final PharmacoSet object containing the multiple parts of the NCI-ALMANAC dataset. — NCI_ALMANAC_pset","text":"PharmacoSet object sample 60 samples treatment 31 treatments molecularProfiles MultiAssayExperiment 4 RangedSummarizedExperiments, 'rna', 'mirna', 'rnaseq.comp', 'rnaseq.iso' treatmentResponse TreatmentResponseExperiment 10080 total experiments. Assays : 'response', 'profiles' 'assay_metadata'.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.table containing a subset of interesting drug combinations from the NCI-ALMANAC — NCI_ALMANAC_raw","title":"A data.table containing a subset of interesting drug combinations from the NCI-ALMANAC — NCI_ALMANAC_raw","text":"subset NCI-ALMANAC drug combination dataset Holkeck et al. 2017 top 10 synergistic antagonistic drug combinations selected based ranking via ranking Bliss score.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.table containing a subset of interesting drug combinations from the NCI-ALMANAC — NCI_ALMANAC_raw","text":"","code":"data(NCI_ALMANAC_raw)  CBWWorkshop2024::NCI_ALMANAC_raw"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_raw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.table containing a subset of interesting drug combinations from the NCI-ALMANAC — NCI_ALMANAC_raw","text":"data.table object","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_raw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A data.table containing a subset of interesting drug combinations from the NCI-ALMANAC — NCI_ALMANAC_raw","text":"Holbeck, S. L., Camalier, R., Crowell, J. ., Govindharajulu, J. P., Hollingshead, M., Anderson, L. W., Polley, E., Rubinstein, L., Srivastava, ., Wilsker, D., Collins, J. M., & Doroshow, J. H. (2017). National Cancer Institute ALMANAC: Comprehensive Screening Resource Detection Anticancer Drug Pairs Enhanced Therapeutic Activity. Cancer Research, 77(13), 3564–3576. https://doi.org/10.1158/0008-5472.CAN-17-0489","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_sample_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame containing cell-line metadata manually curated as part of the PharmacoSet creation process for the NCI-ALMANAC. — NCI_ALMANAC_sample_metadata","title":"A data.frame containing cell-line metadata manually curated as part of the PharmacoSet creation process for the NCI-ALMANAC. — NCI_ALMANAC_sample_metadata","text":"Sample level metadata cell-lines NCI-ALMANAC, standardized use identifers Cellosaurus included manually curated tissue annotations Oncotree well Cellosaurus disease type annotations.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_sample_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame containing cell-line metadata manually curated as part of the PharmacoSet creation process for the NCI-ALMANAC. — NCI_ALMANAC_sample_metadata","text":"","code":"data(NCI_ALMANAC_sample_metadata)  CBWWorkshop2024::NCI_ALMANAC_sample_metadata"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_sample_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame containing cell-line metadata manually curated as part of the PharmacoSet creation process for the NCI-ALMANAC. — NCI_ALMANAC_sample_metadata","text":"data.frame object","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_sample_metadata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A data.frame containing cell-line metadata manually curated as part of the PharmacoSet creation process for the NCI-ALMANAC. — NCI_ALMANAC_sample_metadata","text":"Bairoch . Cellosaurus, cell line knowledge resource. J. Biomol. Tech. 29:25-38(2018) DOI: 10.7171/jbt.18-2902-002; PMID: 29805321 Holbeck, S. L., Camalier, R., Crowell, J. ., Govindharajulu, J. P., Hollingshead, M., Anderson, L. W., Polley, E., Rubinstein, L., Srivastava, ., Wilsker, D., Collins, J. M., & Doroshow, J. H. (2017). National Cancer Institute ALMANAC: Comprehensive Screening Resource Detection Anticancer Drug Pairs Enhanced Therapeutic Activity. Cancer Research, 77(13), 3564–3576. https://doi.org/10.1158/0008-5472.CAN-17-0489","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_treatment_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame containing drug metadata manually curated as part of the PharmacoSet creation process for the NCI-ALMANAC. — NCI_ALMANAC_treatment_metadata","title":"A data.frame containing drug metadata manually curated as part of the PharmacoSet creation process for the NCI-ALMANAC. — NCI_ALMANAC_treatment_metadata","text":"Treatment metadata various drugs used NCI-ALMANAC additional annotations included standardized drug identifiers match nomenclature PharmacoSet object well links structural idenfiers SMILES InchiKeys well links PubChem via cid.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_treatment_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame containing drug metadata manually curated as part of the PharmacoSet creation process for the NCI-ALMANAC. — NCI_ALMANAC_treatment_metadata","text":"","code":"data(NCI_ALMANAC_treatment_metadata)  CBWWorkshop2024::NCI_ALMANAC_treatment_metadata"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_treatment_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame containing drug metadata manually curated as part of the PharmacoSet creation process for the NCI-ALMANAC. — NCI_ALMANAC_treatment_metadata","text":"data.frame object","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/NCI_ALMANAC_treatment_metadata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A data.frame containing drug metadata manually curated as part of the PharmacoSet creation process for the NCI-ALMANAC. — NCI_ALMANAC_treatment_metadata","text":"Holbeck, S. L., Camalier, R., Crowell, J. ., Govindharajulu, J. P., Hollingshead, M., Anderson, L. W., Polley, E., Rubinstein, L., Srivastava, ., Wilsker, D., Collins, J. M., & Doroshow, J. H. (2017). National Cancer Institute ALMANAC: Comprehensive Screening Resource Detection Anticancer Drug Pairs Enhanced Therapeutic Activity. Cancer Research, 77(13), 3564–3576. https://doi.org/10.1158/0008-5472.CAN-17-0489","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/dummy_pset.html","id":null,"dir":"Reference","previous_headings":"","what":"A PharmacoSet object containing randomly generated data for demonstration purposes. — dummy_pset","title":"A PharmacoSet object containing randomly generated data for demonstration purposes. — dummy_pset","text":"PharmacoSet object containing randomly generated data demonstration purposes.","code":""},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/dummy_pset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A PharmacoSet object containing randomly generated data for demonstration purposes. — dummy_pset","text":"","code":"data(dummy_pset)  CBWWorkshop2024::dummy_pset"},{"path":"https://bhklab.github.io/CBWWorkshop2024/reference/dummy_pset.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A PharmacoSet object containing randomly generated data for demonstration purposes. — dummy_pset","text":"PharmacoSet object sample 50 samples treatment 22 treatments molecularProfiles MultiAssayExperiment 2 SummarizedExperiments, RNASeq, manually applied batch effect one treatmentResponse TreatmentResponseExperiment 184 total experiments. raw assay included.","code":""}]
