devtools::install(".")
clear*()
clear
knit_with_parameters("~/CBWWorkshop2024/vignettes/module2.Rmd")
setwd("~/CBWWorkshop2024/vignettes")
PharmacoGx::availablePSets()
print(available <- PharmacoGx::availablePSets())
View(available)
available[, c("Dataset Name", "PSet Name", "Download") ]
print(names(available))
print(available[, c("Dataset Name", "PSet Name", "Download") ])
print(available[, c("Dataset Name", "PSet Name", "version") ])
PharmacoGx::downloadPSet(name="CCLE_2015",saveDir = "./psets", timeout = 3600, verbose = T)
data(CCLEsmall)
```
data(
NCI60_molecular_data)
NCI60_molecular_data
browseVignettes("CBWWorkshop2024")
browseVignettes(CBWWorkshop2024)
browseVignettes(usethis::proj_path()))
browseVignettes(usethis::proj_path())
library(CBWWorkshop2024)
browseVignettes("CBWWorkshop2024")
browseVignettes("PharmacoGx")
cd ..
setwd("..")
browseVignettes("PharmacoGx")
devtools::install(".", build_vignettes=TRUE)
devtools::install(".", build_vignettes=TRUE)
devtools::install(".", build_vignettes=TRUE)
devtools::build_vignettes(".")
browseVignettes(".")
browseVignettes("CBWWorkshop2024")
devtools::install(".", build_vignettes=TRUE)
devtools::install(".", build_vignettes=TRUE)
browseVignettes("CBWWorkshop2024")
pset <- readRDS("../psets")
pset <- readRDS("../psets/CCLE_2015.rds")
library(PharmacoGx)
suppressPackageStartupMessages({
library(CBWWorkshop2024)
library(PharmacoGx)
library(data.table)
})
CoreGx::
CoreGx:::jermiah()
biocthis::use_bioc_vignette("create_test_data", "Create Test PSet")
CBWWorkshop2024 PharmacoGx::availablePSets()
PharmacoGx::availablePSets()
NCI_ALMANAC_2017
PGx <- BiocStyle::Biocpkg("PharmacoGx")
CGx <- BiocStyle::Biocpkg("CoreGx")
TGx <- BiocStyle::Biocpkg("ToxicoGx")
RGx <- BiocStyle::Biocpkg("RadioGx")
Xv <- BiocStyle::Biocpkg("Xeva")
DT <- BiocStyle::CRANpkg("data.table")
SE <- BiocStyle::Biocpkg("SummarizedExperiment")
MAE <- BiocStyle::Biocpkg("MultiAssayExperiment")
suppressPackageStartupMessages({
library(CBWWorkshop2024)
library(PharmacoGx)
library(data.table)
library(ggplot2)
})
data(NCI_ALMANAC_raw)
knitr::kable(head(NCI_ALMANAC_raw, 5))
print(treDataMapper <- TREDataMapper(rawdata=NCI_ALMANAC_raw))
groups1 <- list(
rowDataMap=c("treatment1id", "treatment2id", "treatment1dose",
"treatment2dose"),
colDataMap=c("sampleid"),
assayMap=c("treatment1id", "treatment2id", "treatment1dose",
"treatment2dose", "sampleid"
)
)
(guess1 <- guessMapping(treDataMapper, groups=groups1, subset=TRUE))
str(rawdata(treDataMapper), give.attr=FALSE)
groups2 <- list(
rowDataMap=c("treatment1id", "treatment2id", "treatment1dose",
"treatment2dose", "tech_rep"),
colDataMap=c("sampleid", "bio_rep"),
assayMap=c("treatment1id", "treatment2id", "treatment1dose",
"treatment2dose",  "sampleid", "bio_rep", "tech_rep")
)
(guess2 <- guessMapping(treDataMapper, groups=groups2, subset=TRUE))
metadataMap(treDataMapper) <- list(experiment_metadata=guess2$metadata$mapped_columns)
rowDataMap(treDataMapper) <- guess2$rowDataMap
colDataMap(treDataMapper) <- guess2$colDataMap
(guess2$assayMap)
assaymap <- list(
response=list(
id_columns=guess2$assayMap$id_columns,
mapped_columns=c("viability", "PERCENTGROWTH", "PERCENTGROWTHNOTZ",
"EXPECTEDGROWTH", "TESTVALUE", "CONTROLVALUE", "TZVALUE")
),
profiles=list(
id_columns=guess2$assayMap$id_columns,
mapped_columns=c("SCORE")
),
assay_metadata=list(
id_columns=guess2$assayMap$id_columns,
mapped_columns=c("COMBODRUGSEQ", "STUDY", "TESTDATE", "PLATE",
"SCREENER", "PREFIX2", "CONCINDEX1", "CONCINDEX2", "SAMPLE1",
"SAMPLE2")
)
)
assayMap(treDataMapper) <- assaymap
(treDataMapper)
(NCI_ALMANAC_tre <- metaConstruct(treDataMapper))
(NCI_ALMANAC_tre |>
subset(treatment2id == "") |>
aggregate(
assay="response",
mean(viability),
by=c("treatment1id", "treatment1dose", "sampleid", "bio_rep")
) ->
mono_response_no_reps)
(NCI_ALMANAC_tre |>
aggregate(
subset=treatment2id == "",
assay="response",
my_viability=mean(viability),
my_dose=mean(treatment1dose),
by=c("treatment1id", "treatment1dose", "sampleid", "bio_rep")
) ->
mono_response_custom_names)
data(NCI60_molecular_data)
(NCI60_molecular_data)
data(NCI_ALMANAC_sample_metadata)
knitr::kable(head(NCI_ALMANAC_sample_metadata))
data(NCI_ALMANAC_treatment_metadata)
knitr::kable(head(NCI_ALMANAC_treatment_metadata))
curation <- list(
sample=NCI_ALMANAC_sample_metadata[, c("sampleid", "NCI_ALMANAC.sampleid")],
treatment=NCI_ALMANAC_treatment_metadata[, c("treatmentid", "NCI_ALMANAC.treatmentid")],
tissue=data.frame(
NCI_ALMANAC_sample_metadata[, c("tissueid", "NCI_ALMANAC.disease")],
rownames=NCI_ALMANAC_sample_metadata$sampleid
)
)
(NCI_ALMANAC_2017 <- PharmacoSet2(
name="NCI_ALMANAC_2017",
molecularProfiles=NCI60_molecular_data,
treatmentResponse=NCI_ALMANAC_tre,
treatment=NCI_ALMANAC_treatment_metadata,
sample=NCI_ALMANAC_sample_metadata,
curation=curation
))
NCI_ALMANAC_2017
object.size(NCI_ALMANAC_2017)
object.size(NCI_ALMANAC_2017)
saveRDS(NCI_ALMANAC_2017, "../data/nci_pset.RDS")
getwd()
saveRDS(NCI_ALMANAC_2017, "./data/nci_pset.RDS")
usethis::use_data(NCI_ALMANAC_2017, name="NCI_PSET")
usethis::use_data(NCI_ALMANAC_2017)
data("NCI_ALMANAC_2017")
exit
quit()
